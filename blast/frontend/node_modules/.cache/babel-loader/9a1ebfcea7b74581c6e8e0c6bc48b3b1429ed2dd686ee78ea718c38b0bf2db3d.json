{"ast":null,"code":"import React,{useState,useEffect,useCallback,useRef}from'react';import{io}from'socket.io-client';import{API_BASE_URL}from'../config';import GameRoom from'./GameRoom';import GameLobby from'./GameLobby';import'./MultiPlayer.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function MultiPlayer(){const socketRef=useRef(null);const[rooms,setRooms]=useState([]);// 添加 rooms 状态\nconst[gameState,setGameState]=useState({roomId:null,currentRound:0,maxRounds:3,status:'lobby',isReady:false});useEffect(()=>{// 使用完整的配置选项\nconst socket=io(API_BASE_URL,{transports:['websocket','polling'],reconnectionAttempts:5,reconnectionDelay:1000,autoConnect:true,timeout:10000});socketRef.current=socket;const handlers={connect:()=>{console.log('Connected to server');socket.emit('getRooms');// 连接后请求房间列表\n},disconnect:reason=>{console.log('Disconnected:',reason);},connect_error:error=>{console.error('Connection error:',error);},roomsList:roomsList=>{console.log('Received rooms list:',roomsList);setRooms(roomsList);// 处理房间列表更新\n},roomCreated:data=>{setGameState(prev=>({...prev,roomId:data.roomCode,status:'room'}));},error:console.error};Object.entries(handlers).forEach(_ref=>{let[event,handler]=_ref;socket.on(event,handler);});return()=>{if(socket){Object.keys(handlers).forEach(event=>{socket.off(event);});socket.disconnect();}};},[]);const handleCreateRoom=useCallback(function(){let settings=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};if(!socketRef.current)return;const roomSettings={maxRounds:settings.maxRounds||3};socketRef.current.emit('createRoom',roomSettings);},[]);const handleJoinRoom=roomId=>{if(socketRef.current){socketRef.current.emit('joinRoom',roomId);setGameState(prev=>({...prev,status:'room'}));}};const handleSpectateRoom=roomId=>{if(socketRef.current){socketRef.current.emit('spectateRoom',roomId);setGameState(prev=>({...prev,status:'spectate'}));}};const handlePlayerReady=()=>{if(socketRef.current&&gameState.roomId){socketRef.current.emit('playerReady',{roomId:gameState.roomId});setGameState(prev=>({...prev,isReady:true}));}};return/*#__PURE__*/_jsxs(\"div\",{className:\"multiplayer-container\",children:[gameState.status==='lobby'&&/*#__PURE__*/_jsx(GameLobby,{rooms:rooms,maxRounds:gameState.maxRounds,setMaxRounds:rounds=>setGameState(prev=>({...prev,maxRounds:rounds})),onCreateRoom:handleCreateRoom,onJoinRoom:handleJoinRoom,onSpectateRoom:handleSpectateRoom}),gameState.status==='room'&&/*#__PURE__*/_jsx(GameRoom,{socket:socketRef.current,roomId:gameState.roomId,currentRound:gameState.currentRound,maxRounds:gameState.maxRounds,scores:gameState.scores,isReady:gameState.isReady,onReady:handlePlayerReady}),gameState.status==='spectate'&&/*#__PURE__*/_jsx(SpectatorView,{roomId:gameState.roomId,socket:socketRef.current})]});}// 防抖函数\nfunction debounce(fn,delay){let timer=null;return function(){for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}if(timer)clearTimeout(timer);timer=setTimeout(()=>fn(...args),delay);};}export default MultiPlayer;","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","io","API_BASE_URL","GameRoom","GameLobby","jsx","_jsx","jsxs","_jsxs","MultiPlayer","socketRef","rooms","setRooms","gameState","setGameState","roomId","currentRound","maxRounds","status","isReady","socket","transports","reconnectionAttempts","reconnectionDelay","autoConnect","timeout","current","handlers","connect","console","log","emit","disconnect","reason","connect_error","error","roomsList","roomCreated","data","prev","roomCode","Object","entries","forEach","_ref","event","handler","on","keys","off","handleCreateRoom","settings","arguments","length","undefined","roomSettings","handleJoinRoom","handleSpectateRoom","handlePlayerReady","className","children","setMaxRounds","rounds","onCreateRoom","onJoinRoom","onSpectateRoom","scores","onReady","SpectatorView","debounce","fn","delay","timer","_len","args","Array","_key","clearTimeout","setTimeout"],"sources":["/Users/thecold/Desktop/courses/Software Engneering/Final Project/BlastCSGO/frontend/src/components/MultiPlayer.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { io } from 'socket.io-client';\nimport { API_BASE_URL } from '../config';\nimport GameRoom from './GameRoom';\nimport GameLobby from './GameLobby';\nimport './MultiPlayer.css';\n\nfunction MultiPlayer() {\n    const socketRef = useRef(null);\n    const [rooms, setRooms] = useState([]); // 添加 rooms 状态\n    const [gameState, setGameState] = useState({\n        roomId: null,\n        currentRound: 0,\n        maxRounds: 3,\n        status: 'lobby',\n        isReady: false\n    });\n\n    useEffect(() => {\n        // 使用完整的配置选项\n        const socket = io(API_BASE_URL, {\n            transports: ['websocket', 'polling'],\n            reconnectionAttempts: 5,\n            reconnectionDelay: 1000,\n            autoConnect: true,\n            timeout: 10000,\n        });\n\n        socketRef.current = socket;\n\n        const handlers = {\n            connect: () => {\n                console.log('Connected to server');\n                socket.emit('getRooms'); // 连接后请求房间列表\n            },\n            disconnect: (reason) => {\n                console.log('Disconnected:', reason);\n            },\n            connect_error: (error) => {\n                console.error('Connection error:', error);\n            },\n            roomsList: (roomsList) => {\n                console.log('Received rooms list:', roomsList);\n                setRooms(roomsList); // 处理房间列表更新\n            },\n            roomCreated: (data) => {\n                setGameState(prev => ({\n                    ...prev,\n                    roomId: data.roomCode,\n                    status: 'room'\n                }));\n            },\n            error: console.error\n        };\n\n        Object.entries(handlers).forEach(([event, handler]) => {\n            socket.on(event, handler);\n        });\n\n        return () => {\n            if (socket) {\n                Object.keys(handlers).forEach(event => {\n                    socket.off(event);\n                });\n                socket.disconnect();\n            }\n        };\n    }, []);\n\n    const handleCreateRoom = useCallback((settings = {}) => {\n        if (!socketRef.current) return;\n        \n        const roomSettings = {\n            maxRounds: settings.maxRounds || 3\n        };\n\n        socketRef.current.emit('createRoom', roomSettings);\n    }, []);\n\n    const handleJoinRoom = (roomId) => {\n        if (socketRef.current) {\n            socketRef.current.emit('joinRoom', roomId);\n            setGameState(prev => ({\n                ...prev,\n                status: 'room'\n            }));\n        }\n    };\n\n    const handleSpectateRoom = (roomId) => {\n        if (socketRef.current) {\n            socketRef.current.emit('spectateRoom', roomId);\n            setGameState(prev => ({\n                ...prev,\n                status: 'spectate'\n            }));\n        }\n    };\n\n    const handlePlayerReady = () => {\n        if (socketRef.current && gameState.roomId) {\n            socketRef.current.emit('playerReady', { roomId: gameState.roomId });\n            setGameState(prev => ({\n                ...prev,\n                isReady: true\n            }));\n        }\n    };\n\n    return (\n        <div className=\"multiplayer-container\">\n            {gameState.status === 'lobby' && (\n                <GameLobby \n                    rooms={rooms}\n                    maxRounds={gameState.maxRounds}\n                    setMaxRounds={(rounds) => setGameState(prev => ({ ...prev, maxRounds: rounds }))}\n                    onCreateRoom={handleCreateRoom}\n                    onJoinRoom={handleJoinRoom}\n                    onSpectateRoom={handleSpectateRoom}\n                />\n            )}\n            \n            {gameState.status === 'room' && (\n                <GameRoom \n                    socket={socketRef.current}\n                    roomId={gameState.roomId}\n                    currentRound={gameState.currentRound}\n                    maxRounds={gameState.maxRounds}\n                    scores={gameState.scores}\n                    isReady={gameState.isReady}\n                    onReady={handlePlayerReady}\n                />\n            )}\n\n            {gameState.status === 'spectate' && (\n                <SpectatorView \n                    roomId={gameState.roomId}\n                    socket={socketRef.current}\n                />\n            )}\n        </div>\n    );\n}\n\n// 防抖函数\nfunction debounce(fn, delay) {\n    let timer = null;\n    return function(...args) {\n        if (timer) clearTimeout(timer);\n        timer = setTimeout(() => fn(...args), delay);\n    };\n}\n\nexport default MultiPlayer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}