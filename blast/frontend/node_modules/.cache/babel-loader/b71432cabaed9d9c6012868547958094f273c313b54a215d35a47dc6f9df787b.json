{"ast":null,"code":"var _jsxFileName = \"/Users/thecold/Desktop/courses/Software Engneering/Final Project/BlastCSGO/frontend/src/components/GameRoom.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport './GameRoom.css';\nimport { API_BASE_URL } from '../config';\nimport GuessHistory from './GuessHistory';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst decryptData = async encryptedData => {\n  const response = await fetch(`${API_BASE_URL}/api/decrypt`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      encryptedData\n    })\n  });\n  return await response.json();\n};\nfunction GameRoom({\n  roomId,\n  socket,\n  scores,\n  currentRound,\n  maxRounds\n}) {\n  _s();\n  const [gameState, setGameState] = useState({\n    currentPlayer: null,\n    timeLeft: 60,\n    guess: '',\n    remainingGuesses: 8,\n    guessHistory: []\n  });\n  const [playersGuesses, setPlayersGuesses] = useState({});\n  const [messages, setMessages] = useState([]);\n  const [suggestions, setSuggestions] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [showGameResult, setShowGameResult] = useState(false);\n  const [players, setPlayers] = useState({});\n  const [isChatExpanded, setIsChatExpanded] = useState(true);\n  const regionMapping = {\n    Asia: ['China', 'Mongolia', 'Indonesia', 'Malaysia', 'Turkey', 'India'],\n    Europe: ['France', 'Germany', 'Sweden', 'Denmark', 'Poland', 'Spain', 'Italy', 'Ukraine', 'Finland', 'Norway']\n  };\n  const getRegion = country => {\n    for (const [region, countries] of Object.entries(regionMapping)) {\n      if (countries.includes(country)) {\n        return region;\n      }\n    }\n    return 'Other';\n  };\n  const getAge = birthYear => 2025 - birthYear;\n  const guessHistoryRef = useRef([]);\n  const playersRef = useRef({});\n  useEffect(() => {\n    fetch(`${API_BASE_URL}/api/players`).then(res => res.json()).then(data => setPlayers(data)).catch(err => console.error('获取玩家数据失败:', err));\n    if (!socket) return;\n    const handleRoundStart = data => {\n      const simplePlayer = {\n        country: data.country,\n        team: data.team,\n        role: data.role,\n        majapp: data.majapp,\n        hiddenName: data.hiddenName\n      };\n      setGameState(prev => ({\n        ...prev,\n        currentPlayer: simplePlayer,\n        remainingGuesses: 8,\n        timeLeft: 60,\n        guess: ''\n      }));\n      setPlayersGuesses({});\n    };\n    const handleRoundEnd = ({\n      winner,\n      correctAnswer\n    }) => {\n      setGameState(prev => ({\n        ...prev,\n        showAnswer: true,\n        currentPlayer: {\n          ...prev.currentPlayer,\n          hiddenName: correctAnswer\n        }\n      }));\n      setShowGameResult(true);\n    };\n    const handleChatMessage = message => {\n      setMessages(prev => [...prev, message]);\n    };\n    socket.on('roundStart', handleRoundStart);\n    socket.on('roundEnd', handleRoundEnd);\n    socket.on('chatMessage', handleChatMessage);\n    return () => {\n      socket.off('roundStart', handleRoundStart);\n      socket.off('roundEnd', handleRoundEnd);\n      socket.off('chatMessage', handleChatMessage);\n    };\n  }, [socket, roomId]);\n  const handleGuessResult = useCallback(({\n    playerId,\n    guess,\n    result\n  }) => {\n    if (!result) return;\n\n    // 使用单层数据结构\n    setPlayersGuesses(prev => ({\n      ...prev,\n      [playerId]: [...(prev[playerId] || []), {\n        name: guess,\n        ...result,\n        timestamp: Date.now()\n      }]\n    }));\n  }, []);\n  useEffect(() => {\n    if (!socket) return;\n\n    // 一次性注册所有事件监听器\n    const eventHandlers = {\n      'roundStart': data => {\n        const simpleData = {\n          country: data.country,\n          team: data.team,\n          role: data.role,\n          majapp: data.majapp,\n          hiddenName: data.hiddenName\n        };\n        setGameState(prev => ({\n          ...prev,\n          currentPlayer: simpleData,\n          remainingGuesses: 8,\n          timeLeft: 60,\n          guess: ''\n        }));\n        setPlayersGuesses({});\n      },\n      'guessResult': handleGuessResult,\n      'roundEnd': ({\n        winner,\n        correctAnswer\n      }) => {\n        setGameState(prev => ({\n          ...prev,\n          showAnswer: true,\n          currentPlayer: {\n            ...prev.currentPlayer,\n            hiddenName: correctAnswer\n          }\n        }));\n        setShowGameResult(true);\n      }\n    };\n\n    // 注册事件\n    Object.entries(eventHandlers).forEach(([event, handler]) => {\n      socket.on(event, handler);\n    });\n\n    // 清理函数\n    return () => {\n      Object.keys(eventHandlers).forEach(event => {\n        socket.off(event);\n      });\n    };\n  }, [socket, handleGuessResult]);\n  useEffect(() => {\n    if (!socket) return;\n    const handleRoundStart = data => {\n      // 简化数据结构\n      const gameData = {\n        currentPlayer: {\n          country: data.country,\n          team: data.team,\n          role: data.role,\n          majapp: data.majapp,\n          hiddenName: data.hiddenName\n        },\n        remainingGuesses: 8,\n        timeLeft: 60,\n        guess: ''\n      };\n      setGameState(gameData);\n      setPlayersGuesses({});\n    };\n    const handleGuessResult = data => {\n      // 使用简单数据结构\n      setPlayersGuesses(prev => {\n        const newGuesses = {\n          ...prev\n        };\n        if (!newGuesses[data.playerId]) {\n          newGuesses[data.playerId] = [];\n        }\n        newGuesses[data.playerId].push(data.result);\n        return newGuesses;\n      });\n    };\n    socket.on('roundStart', handleRoundStart);\n    socket.on('guessResult', handleGuessResult);\n    return () => {\n      socket.off('roundStart', handleRoundStart);\n      socket.off('guessResult', handleGuessResult);\n    };\n  }, [socket]);\n  useEffect(() => {\n    if (!socket) return;\n    const handlers = {\n      roundStart: data => {\n        setGameState(prev => ({\n          ...prev,\n          currentPlayer: {\n            country: data.country,\n            team: data.team,\n            role: data.role,\n            majapp: data.majapp,\n            hiddenName: data.hiddenName\n          },\n          remainingGuesses: 8,\n          timeLeft: 60,\n          guess: ''\n        }));\n        // 清理历史记录\n        guessHistoryRef.current = [];\n      }\n    };\n\n    // 注册事件处理器\n    Object.entries(handlers).forEach(([event, handler]) => {\n      socket.on(event, handler);\n    });\n    return () => {\n      // 清理事件监听器\n      Object.keys(handlers).forEach(event => {\n        socket.off(event);\n      });\n    };\n  }, [socket]); // 只依赖 socket\n\n  const handleInputChange = e => {\n    const value = e.target.value;\n    setGameState(prev => ({\n      ...prev,\n      guess: value\n    }));\n    if (!value.trim()) {\n      setSuggestions([]);\n      return;\n    }\n    fetch(`${API_BASE_URL}/api/search-players?query=${value}`).then(response => response.json()).then(data => setSuggestions(data)).catch(error => console.error('搜索选手失败:', error));\n  };\n  const handleGuess = () => {\n    if (!gameState.currentPlayer || gameState.remainingGuesses <= 0 || !gameState.guess.trim()) return;\n    const guessedPlayer = players[gameState.guess];\n    if (!guessedPlayer) return;\n\n    // 发送简化的猜测数据\n    const guessData = {\n      roomId,\n      guess: gameState.guess,\n      playerData: {\n        name: gameState.guess,\n        team: guessedPlayer.team,\n        country: guessedPlayer.country,\n        role: guessedPlayer.role,\n        majapp: guessedPlayer.majapp\n      }\n    };\n    socket.emit('submitGuess', guessData);\n    setGameState(prev => ({\n      ...prev,\n      remainingGuesses: prev.remainingGuesses - 1,\n      guess: ''\n    }));\n    setSuggestions([]);\n  };\n  const sendMessage = () => {\n    if (!newMessage.trim() || !socket) return;\n    const message = {\n      id: socket.id,\n      content: newMessage,\n      timestamp: Date.now()\n    };\n    socket.emit('chatMessage', {\n      roomId,\n      ...message\n    });\n    setNewMessage('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-room\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-room-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-main\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"\\u623F\\u95F4 #\", roomId]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"game-status\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"\\u56DE\\u5408: \", currentRound, \"/\", maxRounds]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"\\u5269\\u4F59\\u65F6\\u95F4: \", gameState.timeLeft, \"\\u79D2\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: gameState.guess,\n            onChange: handleInputChange,\n            placeholder: \"\\u8F93\\u5165\\u9009\\u624B\\u540D\\u5B57\",\n            disabled: !gameState.currentPlayer || gameState.remainingGuesses <= 0,\n            className: \"player-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 25\n          }, this), suggestions.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"suggestions-list\",\n            children: suggestions.map(suggestion => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"suggestion-item\",\n              onClick: () => {\n                setGameState(prev => ({\n                  ...prev,\n                  guess: suggestion.name\n                }));\n                setSuggestions([]);\n              },\n              children: suggestion.name\n            }, suggestion.name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-group\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"submit-guess\",\n            onClick: handleGuess,\n            disabled: !gameState.currentPlayer || gameState.remainingGuesses <= 0,\n            children: \"\\u63D0\\u4EA4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-bar\",\n            style: {\n              width: `${gameState.remainingGuesses / 8 * 100}%`\n            },\n            children: gameState.remainingGuesses\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"guess-histories\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"player-history\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"\\u4F60\\u7684\\u731C\\u6D4B\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(GuessHistory, {\n              history: gameState.guessHistory\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"player-history\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"\\u5BF9\\u624B\\u7684\\u731C\\u6D4B\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 29\n            }, this), Object.entries(playersGuesses).map(([playerId, guesses]) => playerId !== socket.id && /*#__PURE__*/_jsxDEV(GuessHistory, {\n              history: guesses\n            }, playerId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 37\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `chat-section ${isChatExpanded ? 'expanded' : 'collapsed'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-header\",\n          onClick: () => setIsChatExpanded(!isChatExpanded),\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\u804A\\u5929\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"toggle-button\",\n            children: isChatExpanded ? '↓' : '↑'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messages-container\",\n          children: messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message ${msg.id === socket.id ? 'self' : ''}`,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"message-time\",\n              children: new Date(msg.timestamp).toLocaleTimeString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"message-content\",\n              children: msg.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 33\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newMessage,\n            onChange: e => setNewMessage(e.target.value),\n            onKeyPress: e => e.key === 'Enter' && sendMessage(),\n            placeholder: \"\\u53D1\\u9001\\u6D88\\u606F...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: sendMessage,\n            children: \"\\u53D1\\u9001\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 13\n    }, this), showGameResult && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-result-modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\u56DE\\u5408\\u7ED3\\u675F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u6B63\\u786E\\u7B54\\u6848: \", gameState.currentPlayer.hiddenName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowGameResult(false),\n        children: \"\\u7EE7\\u7EED\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 307,\n    columnNumber: 9\n  }, this);\n}\n_s(GameRoom, \"PONvqZHMK55bWq4V0sxA4uT3jRw=\");\n_c = GameRoom;\nexport default _c2 = /*#__PURE__*/React.memo(GameRoom); // 使用 memo 优化渲染\nvar _c, _c2;\n$RefreshReg$(_c, \"GameRoom\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","API_BASE_URL","GuessHistory","jsxDEV","_jsxDEV","decryptData","encryptedData","response","fetch","method","headers","body","JSON","stringify","json","GameRoom","roomId","socket","scores","currentRound","maxRounds","_s","gameState","setGameState","currentPlayer","timeLeft","guess","remainingGuesses","guessHistory","playersGuesses","setPlayersGuesses","messages","setMessages","suggestions","setSuggestions","newMessage","setNewMessage","showGameResult","setShowGameResult","players","setPlayers","isChatExpanded","setIsChatExpanded","regionMapping","Asia","Europe","getRegion","country","region","countries","Object","entries","includes","getAge","birthYear","guessHistoryRef","playersRef","then","res","data","catch","err","console","error","handleRoundStart","simplePlayer","team","role","majapp","hiddenName","prev","handleRoundEnd","winner","correctAnswer","showAnswer","handleChatMessage","message","on","off","handleGuessResult","playerId","result","name","timestamp","Date","now","eventHandlers","simpleData","roundEnd","forEach","event","handler","keys","gameData","newGuesses","push","handlers","roundStart","current","handleInputChange","e","value","target","trim","handleGuess","guessedPlayer","guessData","playerData","emit","sendMessage","id","content","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","disabled","length","map","suggestion","onClick","style","width","history","guesses","msg","idx","toLocaleTimeString","onKeyPress","key","_c","_c2","memo","$RefreshReg$"],"sources":["/Users/thecold/Desktop/courses/Software Engneering/Final Project/BlastCSGO/frontend/src/components/GameRoom.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport './GameRoom.css';\nimport { API_BASE_URL } from '../config';\nimport GuessHistory from './GuessHistory';\n\nconst decryptData = async (encryptedData) => {\n    const response = await fetch(`${API_BASE_URL}/api/decrypt`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ encryptedData }),\n    });\n    return await response.json();\n};\n\nfunction GameRoom({ roomId, socket, scores, currentRound, maxRounds }) {\n    const [gameState, setGameState] = useState({\n        currentPlayer: null,\n        timeLeft: 60,\n        guess: '',\n        remainingGuesses: 8,\n        guessHistory: [], \n    });\n    \n    const [playersGuesses, setPlayersGuesses] = useState({}); \n    const [messages, setMessages] = useState([]);\n\n    const [suggestions, setSuggestions] = useState([]);\n    const [newMessage, setNewMessage] = useState('');\n    const [showGameResult, setShowGameResult] = useState(false);\n    const [players, setPlayers] = useState({});\n    const [isChatExpanded, setIsChatExpanded] = useState(true);\n\n    const regionMapping = {\n        Asia: ['China', 'Mongolia', 'Indonesia', 'Malaysia', 'Turkey', 'India'],\n        Europe: ['France', 'Germany', 'Sweden', 'Denmark', 'Poland', 'Spain', 'Italy', 'Ukraine', 'Finland', 'Norway'],\n    };\n\n    const getRegion = (country) => {\n        for (const [region, countries] of Object.entries(regionMapping)) {\n            if (countries.includes(country)) {\n                return region;\n            }\n        }\n        return 'Other';\n    };\n\n    const getAge = (birthYear) => 2025 - birthYear;\n\n    const guessHistoryRef = useRef([]);\n    const playersRef = useRef({});\n\n    useEffect(() => {\n        fetch(`${API_BASE_URL}/api/players`)\n            .then(res => res.json())\n            .then(data => setPlayers(data))\n            .catch(err => console.error('获取玩家数据失败:', err));\n\n        if (!socket) return;\n\n        const handleRoundStart = (data) => {\n            const simplePlayer = {\n                country: data.country,\n                team: data.team,\n                role: data.role,\n                majapp: data.majapp,\n                hiddenName: data.hiddenName\n            };\n            \n            setGameState(prev => ({\n                ...prev,\n                currentPlayer: simplePlayer,\n                remainingGuesses: 8,\n                timeLeft: 60,\n                guess: ''\n            }));\n            setPlayersGuesses({});\n        };\n\n        const handleRoundEnd = ({ winner, correctAnswer }) => {\n            setGameState(prev => ({\n                ...prev,\n                showAnswer: true,\n                currentPlayer: { ...prev.currentPlayer, hiddenName: correctAnswer }\n            }));\n            setShowGameResult(true);\n        };\n\n        const handleChatMessage = (message) => {\n            setMessages(prev => [...prev, message]);\n        };\n\n        socket.on('roundStart', handleRoundStart);\n        socket.on('roundEnd', handleRoundEnd);\n        socket.on('chatMessage', handleChatMessage);\n\n        return () => {\n            socket.off('roundStart', handleRoundStart);\n            socket.off('roundEnd', handleRoundEnd);\n            socket.off('chatMessage', handleChatMessage);\n        };\n    }, [socket, roomId]);\n\n    const handleGuessResult = useCallback(({ playerId, guess, result }) => {\n        if (!result) return;\n        \n        // 使用单层数据结构\n        setPlayersGuesses(prev => ({\n            ...prev,\n            [playerId]: [\n                ...(prev[playerId] || []),\n                {\n                    name: guess,\n                    ...result,\n                    timestamp: Date.now()\n                }\n            ]\n        }));\n    }, []);\n\n    useEffect(() => {\n        if (!socket) return;\n\n        // 一次性注册所有事件监听器\n        const eventHandlers = {\n            'roundStart': (data) => {\n                const simpleData = {\n                    country: data.country,\n                    team: data.team,\n                    role: data.role,\n                    majapp: data.majapp,\n                    hiddenName: data.hiddenName\n                };\n                \n                setGameState(prev => ({\n                    ...prev,\n                    currentPlayer: simpleData,\n                    remainingGuesses: 8,\n                    timeLeft: 60,\n                    guess: ''\n                }));\n                setPlayersGuesses({});\n            },\n            'guessResult': handleGuessResult,\n            'roundEnd': ({ winner, correctAnswer }) => {\n                setGameState(prev => ({\n                    ...prev,\n                    showAnswer: true,\n                    currentPlayer: {\n                        ...prev.currentPlayer,\n                        hiddenName: correctAnswer\n                    }\n                }));\n                setShowGameResult(true);\n            }\n        };\n\n        // 注册事件\n        Object.entries(eventHandlers).forEach(([event, handler]) => {\n            socket.on(event, handler);\n        });\n\n        // 清理函数\n        return () => {\n            Object.keys(eventHandlers).forEach(event => {\n                socket.off(event);\n            });\n        };\n    }, [socket, handleGuessResult]);\n\n    useEffect(() => {\n        if (!socket) return;\n\n        const handleRoundStart = (data) => {\n            // 简化数据结构\n            const gameData = {\n                currentPlayer: {\n                    country: data.country,\n                    team: data.team,\n                    role: data.role,\n                    majapp: data.majapp,\n                    hiddenName: data.hiddenName\n                },\n                remainingGuesses: 8,\n                timeLeft: 60,\n                guess: ''\n            };\n            \n            setGameState(gameData);\n            setPlayersGuesses({});\n        };\n\n        const handleGuessResult = (data) => {\n            // 使用简单数据结构\n            setPlayersGuesses(prev => {\n                const newGuesses = { ...prev };\n                if (!newGuesses[data.playerId]) {\n                    newGuesses[data.playerId] = [];\n                }\n                newGuesses[data.playerId].push(data.result);\n                return newGuesses;\n            });\n        };\n\n        socket.on('roundStart', handleRoundStart);\n        socket.on('guessResult', handleGuessResult);\n        \n        return () => {\n            socket.off('roundStart', handleRoundStart);\n            socket.off('guessResult', handleGuessResult);\n        };\n    }, [socket]);\n\n    useEffect(() => {\n        if (!socket) return;\n        \n        const handlers = {\n            roundStart: (data) => {\n                setGameState(prev => ({\n                    ...prev,\n                    currentPlayer: {\n                        country: data.country,\n                        team: data.team,\n                        role: data.role,\n                        majapp: data.majapp,\n                        hiddenName: data.hiddenName\n                    },\n                    remainingGuesses: 8,\n                    timeLeft: 60,\n                    guess: ''\n                }));\n                // 清理历史记录\n                guessHistoryRef.current = [];\n            }\n        };\n\n        // 注册事件处理器\n        Object.entries(handlers).forEach(([event, handler]) => {\n            socket.on(event, handler);\n        });\n\n        return () => {\n            // 清理事件监听器\n            Object.keys(handlers).forEach(event => {\n                socket.off(event);\n            });\n        };\n    }, [socket]); // 只依赖 socket\n\n    const handleInputChange = (e) => {\n        const value = e.target.value;\n        setGameState((prev) => ({ ...prev, guess: value }));\n\n        if (!value.trim()) {\n            setSuggestions([]);\n            return;\n        }\n\n        fetch(`${API_BASE_URL}/api/search-players?query=${value}`)\n            .then((response) => response.json())\n            .then((data) => setSuggestions(data))\n            .catch((error) => console.error('搜索选手失败:', error));\n    };\n\n    const handleGuess = () => {\n        if (!gameState.currentPlayer || gameState.remainingGuesses <= 0 || !gameState.guess.trim()) return;\n\n        const guessedPlayer = players[gameState.guess];\n        if (!guessedPlayer) return;\n\n        // 发送简化的猜测数据\n        const guessData = {\n            roomId,\n            guess: gameState.guess,\n            playerData: {\n                name: gameState.guess,\n                team: guessedPlayer.team,\n                country: guessedPlayer.country,\n                role: guessedPlayer.role,\n                majapp: guessedPlayer.majapp\n            }\n        };\n\n        socket.emit('submitGuess', guessData);\n\n        setGameState(prev => ({\n            ...prev,\n            remainingGuesses: prev.remainingGuesses - 1,\n            guess: ''\n        }));\n        setSuggestions([]);\n    };\n\n    const sendMessage = () => {\n        if (!newMessage.trim() || !socket) return;\n\n        const message = {\n            id: socket.id,\n            content: newMessage,\n            timestamp: Date.now(),\n        };\n\n        socket.emit('chatMessage', { roomId, ...message });\n        setNewMessage('');\n    };\n\n    return (\n        <div className=\"game-room\">\n            <div className=\"game-room-container\">\n                {/* 左侧游戏区域 */}\n                <div className=\"game-main\">\n                    <div className=\"game-header\">\n                        <h2>房间 #{roomId}</h2>\n                        <div className=\"game-status\">\n                            <span>回合: {currentRound}/{maxRounds}</span>\n                            <span>剩余时间: {gameState.timeLeft}秒</span>\n                        </div>\n                    </div>\n\n                    {/* 单人模式风格的输入区域 */}\n                    <div className=\"input-section\">\n                        <input\n                            type=\"text\"\n                            value={gameState.guess}\n                            onChange={handleInputChange}\n                            placeholder=\"输入选手名字\"\n                            disabled={!gameState.currentPlayer || gameState.remainingGuesses <= 0}\n                            className=\"player-input\"\n                        />\n                        {suggestions.length > 0 && (\n                            <div className=\"suggestions-list\">\n                                {suggestions.map((suggestion) => (\n                                    <div\n                                        key={suggestion.name}\n                                        className=\"suggestion-item\"\n                                        onClick={() => {\n                                            setGameState((prev) => ({ ...prev, guess: suggestion.name }));\n                                            setSuggestions([]);\n                                        }}\n                                    >\n                                        {suggestion.name}\n                                    </div>\n                                ))}\n                            </div>\n                        )}\n                    </div>\n\n                    <div className=\"button-group\">\n                        <button\n                            className=\"submit-guess\"\n                            onClick={handleGuess}\n                            disabled={!gameState.currentPlayer || gameState.remainingGuesses <= 0}\n                        >\n                            提交\n                        </button>\n                    </div>\n\n                    <div className=\"progress-container\">\n                        <div\n                            className=\"progress-bar\"\n                            style={{width: `${(gameState.remainingGuesses / 8) * 100}%`}}\n                        >\n                            {gameState.remainingGuesses}\n                        </div>\n                    </div>\n\n                    {/* 将猜测历史区域分为两列显示 */}\n                    <div className=\"guess-histories\">\n                        <div className=\"player-history\">\n                            <h3>你的猜测</h3>\n                            <GuessHistory history={gameState.guessHistory} />\n                        </div>\n                        <div className=\"player-history\">\n                            <h3>对手的猜测</h3>\n                            {Object.entries(playersGuesses).map(([playerId, guesses]) => (\n                                playerId !== socket.id && (\n                                    <GuessHistory key={playerId} history={guesses} />\n                                )\n                            ))}\n                        </div>\n                    </div>\n                </div>\n\n                <div className={`chat-section ${isChatExpanded ? 'expanded' : 'collapsed'}`}>\n                    <div className=\"chat-header\" onClick={() => setIsChatExpanded(!isChatExpanded)}>\n                        <h3>聊天</h3>\n                        <button className=\"toggle-button\">\n                            {isChatExpanded ? '↓' : '↑'}\n                        </button>\n                    </div>\n                    <div className=\"messages-container\">\n                        {messages.map((msg, idx) => (\n                            <div key={idx} className={`message ${msg.id === socket.id ? 'self' : ''}`}>\n                                <span className=\"message-time\">\n                                    {new Date(msg.timestamp).toLocaleTimeString()}\n                                </span>\n                                <span className=\"message-content\">{msg.content}</span>\n                            </div>\n                        ))}\n                    </div>\n                    <div className=\"message-input\">\n                        <input\n                            type=\"text\"\n                            value={newMessage}\n                            onChange={(e) => setNewMessage(e.target.value)}\n                            onKeyPress={(e) => e.key === 'Enter' && sendMessage()}\n                            placeholder=\"发送消息...\"\n                        />\n                        <button onClick={sendMessage}>发送</button>\n                    </div>\n                </div>\n            </div>\n\n            {showGameResult && (\n                <div className=\"game-result-modal\">\n                    <h3>回合结束</h3>\n                    <p>正确答案: {gameState.currentPlayer.hiddenName}</p>\n                    <button onClick={() => setShowGameResult(false)}>继续</button>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default React.memo(GameRoom); // 使用 memo 优化渲染"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}