{"ast":null,"code":"import React,{useState,useEffect}from'react';import{API_BASE_URL}from'../config';import GuessHistory from'./GuessHistory';import'./SinglePlayer.css';// 添加 decryptData 函数\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const decryptData=async encryptedData=>{const response=await fetch(`${API_BASE_URL}/api/decrypt`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({encryptedData})});const data=await response.json();return data;};function SinglePlayer(){var _players$player$hidde;// 区域映射\nconst regionMapping={Asia:['China','Mongolia','Indonesia','Malaysia','Turkey','India','Israel','Jordan','Uzbekistan'],Oceania:['Australia','New Zealand'],Europe:['France','Germany','Sweden','Denmark','Poland','Spain','Italy','Finland','Norway','Latvia','Estonia','Bosnia and Herzegovina','Montenegro','Serbia','Bulgaria','Czech Republic','Switzerland','Netherlands','Slovakia','Lithuania','Romania','United Kingdom','Ukraine','Belgium','Hungary','Portugal','Kosovo'],Africa:['South Africa'],SouthAmerica:['Brazil','Uruguay','Argentina','Chile','Guatemala'],NorthAmerica:['United States','Canada'],CIS:['Russia','Kazakhstan','Belarus']};const getRegion=country=>{for(const[region,countries]of Object.entries(regionMapping)){if(countries.includes(country)){return region;}}return'Other';};// 添加国家中英文映射\nconst countryTranslations={'China':'中国','Mongolia':'蒙古','Indonesia':'印度尼西亚','Malaysia':'马来西亚','Turkey':'土耳其','India':'印度','Israel':'以色列','Jordan':'约旦','Uzbekistan':'乌兹别克斯坦','Australia':'澳大利亚','New Zealand':'新西兰','France':'法国','Germany':'德国','Sweden':'瑞典','Denmark':'丹麦','Poland':'波兰','Spain':'西班牙','Italy':'意大利','Finland':'芬兰','Norway':'挪威','Latvia':'拉脱维亚','Estonia':'爱沙尼亚','Bosnia and Herzegovina':'波黑','Montenegro':'黑山','Serbia':'塞尔维亚','Bulgaria':'保加利亚','Czech Republic':'捷克','Switzerland':'瑞士','Netherlands':'荷兰','Slovakia':'斯洛伐克','Lithuania':'立陶宛','Romania':'罗马尼亚','United Kingdom':'英国','Ukraine':'乌克兰','Belgium':'比利时','Hungary':'匈牙利','Portugal':'葡萄牙','Kosovo':'科索沃','South Africa':'南非','Brazil':'巴西','Uruguay':'乌拉圭','Argentina':'阿根廷','Chile':'智利','Guatemala':'危地马拉','United States':'美国','Canada':'加拿大','Russia':'俄罗斯','Kazakhstan':'哈萨克斯坦','Belarus':'白俄罗斯'};const[player,setPlayer]=useState(null);const[players,setPlayers]=useState({});const[guess,setGuess]=useState('');const[suggestions,setSuggestions]=useState([]);const[guessHistory,setGuessHistory]=useState([]);const[remainingGuesses,setRemainingGuesses]=useState(8);const[showGameResult,setShowGameResult]=useState(false);const[selectedIndex,setSelectedIndex]=useState(-1);// 获取随机选手\nconst fetchRandomPlayer=()=>{fetch(`${API_BASE_URL}/api/random-player`).then(response=>{if(!response.ok)throw new Error('无法获取随机选手');return response.json();}).then(async data=>{const decryptedData=await decryptData(data.encryptedData);setPlayer(decryptedData);setGuess('');setSuggestions([]);setGuessHistory([]);setRemainingGuesses(8);setShowGameResult(false);}).catch(error=>console.error('获取随机选手失败:',error));};// 获取所有选手数据\nuseEffect(()=>{fetch(`${API_BASE_URL}/api/players`).then(response=>{if(!response.ok)throw new Error('无法获取选手数据');return response.json();}).then(data=>setPlayers(data)).catch(err=>console.error('获取玩家数据失败:',err));fetchRandomPlayer();},[]);// 处理搜索建议\nconst handleInputChange=e=>{const value=e.target.value;setGuess(value);setSelectedIndex(-1);if(!value.trim()){setSuggestions([]);return;}fetch(`${API_BASE_URL}/api/search-players?query=${value}`).then(response=>response.json()).then(data=>{setSuggestions(data);// 确保建议列表可见\nconst suggestionsElement=document.querySelector('.suggestions-list');if(suggestionsElement){suggestionsElement.style.display='block';}}).catch(error=>console.error('搜索选手失败:',error));};const handleKeyDown=e=>{if(suggestions.length===0)return;switch(e.key){case'ArrowDown':e.preventDefault();const nextIndex=selectedIndex<suggestions.length-1?selectedIndex+1:selectedIndex;setSelectedIndex(nextIndex);if(nextIndex>=0){setGuess(suggestions[nextIndex].name);}break;case'ArrowUp':e.preventDefault();const prevIndex=selectedIndex>0?selectedIndex-1:0;setSelectedIndex(prevIndex);if(prevIndex>=0){setGuess(suggestions[prevIndex].name);}break;case'Enter':e.preventDefault();if(selectedIndex>=0){submitGuessWithName(suggestions[selectedIndex].name);setSuggestions([]);setSelectedIndex(-1);}else if(guess.trim()){submitGuess();}break;default:break;}};// 新增函数：提取纯队伍名称（移除角色后缀）\nconst getTeamName=team=>{return team.replace(/\\s*\\((coach|benched)\\)$/i,'');};// 添加一个新的函数来处理直接用名字提交\nconst submitGuessWithName=playerName=>{if(!player||remainingGuesses<=0)return;let guessedPlayer=players[playerName];if(!guessedPlayer){const matchedEntry=Object.entries(players).find(_ref=>{let[name]=_ref;return name.toLowerCase()===playerName.toLowerCase();});if(matchedEntry){guessedPlayer=matchedEntry[1];}}if(!guessedPlayer){setGuess('');return;}// 使用传入的 playerName 构建新的猜测数据\nconst newGuess={name:playerName,team:guessedPlayer.team,teamCorrect:getTeamName(guessedPlayer.team)===getTeamName(player.team),country:countryTranslations[guessedPlayer.country]||guessedPlayer.country,countryCorrect:String(guessedPlayer.country).toLowerCase()===String(player.country).toLowerCase(),countryRegion:getRegion(guessedPlayer.country),targetCountryRegion:getRegion(player.country),birth_year:compareValues(guessedPlayer.birth_year,player.birth_year),guessedAge:2025-guessedPlayer.birth_year,// 修改为2025年\ntargetAge:2025-player.birth_year,// 添加目标年龄\nrole:guessedPlayer.role,roleCorrect:guessedPlayer.role.toLowerCase()===player.role.toLowerCase(),majapp:compareMajors(guessedPlayer.majapp,player.majapp),guessedMajapp:guessedPlayer.majapp,targetMajapp:player.majapp// 添加目标 Major 次数\n};setGuessHistory(prev=>[...prev,newGuess]);setRemainingGuesses(prev=>{const newRemaining=prev-1;// 确保进度条更新\ndocument.querySelector('.progress-bar').style.width=`${newRemaining/8*100}%`;return newRemaining;});setGuess('');setSuggestions([]);// 检查是否猜对或用完猜测次数\nif(playerName.toLowerCase()===player.hiddenName.toLowerCase()||remainingGuesses-1===0){setShowGameResult(true);}};// 提交猜测\nconst submitGuess=()=>{if(!player||remainingGuesses<=0||!guess.trim())return;// 先尝试完全匹配\nlet guessedPlayer=players[guess];// 如果完全匹配未找到，再尝试不区分大小写的匹配\nif(!guessedPlayer){const matchedEntry=Object.entries(players).find(_ref2=>{let[name]=_ref2;return name.toLowerCase()===guess.toLowerCase();});if(matchedEntry){setGuess(matchedEntry[0]);// 设置为正确的大小写形式\nguessedPlayer=matchedEntry[1];}}if(!guessedPlayer){setGuess('');return;}// 构建新的猜测数据\nconst newGuess={name:guess,team:guessedPlayer.team,teamCorrect:getTeamName(guessedPlayer.team)===getTeamName(player.team),country:countryTranslations[guessedPlayer.country]||guessedPlayer.country,countryCorrect:String(guessedPlayer.country).toLowerCase()===String(player.country).toLowerCase(),countryRegion:getRegion(guessedPlayer.country),targetCountryRegion:getRegion(player.country),birth_year:compareValues(guessedPlayer.birth_year,player.birth_year),guessedAge:2025-guessedPlayer.birth_year,// 修改为2025年\ntargetAge:2025-player.birth_year,// 添加目标年龄\nrole:guessedPlayer.role,roleCorrect:guessedPlayer.role.toLowerCase()===player.role.toLowerCase(),majapp:compareMajors(guessedPlayer.majapp,player.majapp),guessedMajapp:guessedPlayer.majapp,targetMajapp:player.majapp// 添加目标 Major 次数\n};setGuessHistory(prev=>[...prev,newGuess]);setRemainingGuesses(prev=>{const newRemaining=prev-1;// 确保进度条更新\ndocument.querySelector('.progress-bar').style.width=`${newRemaining/8*100}%`;return newRemaining;});setGuess('');setSuggestions([]);// 检查是否猜对或用完猜测次数\nif(guess.toLowerCase()===player.hiddenName.toLowerCase()||remainingGuesses-1===0){setShowGameResult(true);}};// 修改比较函数的判定逻辑\nconst compareValues=(guessed,target)=>{if(guessed===target)return'correct';const diff=Math.abs(guessed-target);if(diff<=3)return'close';// 修改为 3 年内为接近\nreturn guessed>target?'higher':'lower';};const compareMajors=(guessed,target)=>{if(guessed===target)return'correct';const diff=Math.abs(guessed-target);if(diff<=2)return'close';// 修改为 2 次以内为接近\nreturn guessed>target?'higher':'lower';};const handleContinueGame=()=>{setShowGameResult(false);fetchRandomPlayer();};const handleStayHere=()=>{setShowGameResult(false);};// 添加滚动到底部的函数\nconst scrollToBottom=()=>{const element=document.querySelector('.single-player');if(element){element.scrollTo({top:element.scrollHeight,behavior:'smooth'});}};// 在添加新的猜测历史后滚动到底部\nuseEffect(()=>{if(guessHistory.length>0){scrollToBottom();}},[guessHistory]);return/*#__PURE__*/_jsx(\"div\",{className:\"single-player\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"game-area\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"input-section\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:guess,onChange:handleInputChange,onKeyDown:handleKeyDown,placeholder:\"\\u8F93\\u5165\\u9009\\u624B\\u540D\\u5B57\",disabled:!player||remainingGuesses<=0,className:\"player-input\"}),suggestions.length>0&&/*#__PURE__*/_jsx(\"div\",{className:\"suggestions-list\",children:suggestions.map((suggestion,index)=>/*#__PURE__*/_jsx(\"div\",{className:`suggestion-item ${index===selectedIndex?'selected':''}`,onClick:()=>{setGuess(suggestion.name);setSuggestions([]);setSelectedIndex(-1);},children:suggestion.name},suggestion.name))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"button-group\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:submitGuess,disabled:!player||remainingGuesses<=0,className:\"submit-button\",children:\"\\u63D0\\u4EA4\"}),/*#__PURE__*/_jsx(\"button\",{onClick:fetchRandomPlayer,className:\"reset-button\",children:\"\\u6362\\u4E00\\u4E2A\\u9009\\u624B\"})]}),/*#__PURE__*/_jsx(GuessHistory,{history:guessHistory,player:player}),/*#__PURE__*/_jsx(\"div\",{className:\"progress-container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"progress-bar\",style:{width:`${remainingGuesses/8*100}%`},children:remainingGuesses})}),showGameResult&&/*#__PURE__*/_jsxs(\"div\",{className:\"game-result-modal\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"game-result-title\",children:guess.toLowerCase()===player.hiddenName.toLowerCase()?'恭喜猜对了！':'游戏结束'}),/*#__PURE__*/_jsxs(\"div\",{className:\"game-result-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"player-info-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"player-info-label\",children:\"\\u9009\\u624B\\u540D\\u5B57:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"player-info-value\",children:player.hiddenName})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"player-info-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"player-info-label\",children:\"\\u6240\\u5C5E\\u6218\\u961F:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"player-info-value\",children:player.team})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"player-info-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"player-info-label\",children:\"\\u56FD\\u5BB6\\u53CA\\u5730\\u533A:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"player-info-value\",children:countryTranslations[player.country]||player.country})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"player-info-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"player-info-label\",children:\"\\u51FA\\u751F\\u5E74\\u4EFD:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"player-info-value\",children:player.birth_year})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"player-info-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"player-info-label\",children:\"\\u6E38\\u620F\\u89D2\\u8272:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"player-info-value\",children:player.role})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"player-info-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"player-info-label\",children:\"Major\\u6B21\\u6570:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"player-info-value\",children:player.majapp})]}),/*#__PURE__*/_jsx(\"a\",{className:\"game-result-link\",href:(_players$player$hidde=players[player.hiddenName])===null||_players$player$hidde===void 0?void 0:_players$player$hidde.link,target:\"_blank\",rel:\"noopener noreferrer\",children:\"\\u67E5\\u770B\\u9009\\u624B\\u8D44\\u6599 \\u2192\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"game-result-buttons\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"button-continue\",onClick:handleContinueGame,children:\"\\u4E0B\\u4E00\\u4E2A\\u9009\\u624B\"}),/*#__PURE__*/_jsx(\"button\",{className:\"button-stay\",onClick:handleStayHere,children:\"\\u67E5\\u770B\\u5386\\u53F2\\u8BB0\\u5F55\"})]})]})]})});}export default SinglePlayer;","map":{"version":3,"names":["React","useState","useEffect","API_BASE_URL","GuessHistory","jsx","_jsx","jsxs","_jsxs","decryptData","encryptedData","response","fetch","method","headers","body","JSON","stringify","data","json","SinglePlayer","_players$player$hidde","regionMapping","Asia","Oceania","Europe","Africa","SouthAmerica","NorthAmerica","CIS","getRegion","country","region","countries","Object","entries","includes","countryTranslations","player","setPlayer","players","setPlayers","guess","setGuess","suggestions","setSuggestions","guessHistory","setGuessHistory","remainingGuesses","setRemainingGuesses","showGameResult","setShowGameResult","selectedIndex","setSelectedIndex","fetchRandomPlayer","then","ok","Error","decryptedData","catch","error","console","err","handleInputChange","e","value","target","trim","suggestionsElement","document","querySelector","style","display","handleKeyDown","length","key","preventDefault","nextIndex","name","prevIndex","submitGuessWithName","submitGuess","getTeamName","team","replace","playerName","guessedPlayer","matchedEntry","find","_ref","toLowerCase","newGuess","teamCorrect","countryCorrect","String","countryRegion","targetCountryRegion","birth_year","compareValues","guessedAge","targetAge","role","roleCorrect","majapp","compareMajors","guessedMajapp","targetMajapp","prev","newRemaining","width","hiddenName","_ref2","guessed","diff","Math","abs","handleContinueGame","handleStayHere","scrollToBottom","element","scrollTo","top","scrollHeight","behavior","className","children","type","onChange","onKeyDown","placeholder","disabled","map","suggestion","index","onClick","history","href","link","rel"],"sources":["/Users/thecold/Desktop/courses/Software Engneering/Final Project/BlastCSGO/frontend/src/components/SinglePlayer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { API_BASE_URL } from '../config';\nimport GuessHistory from './GuessHistory';\nimport './SinglePlayer.css';\n\n// 添加 decryptData 函数\nconst decryptData = async (encryptedData) => {\n    const response = await fetch(`${API_BASE_URL}/api/decrypt`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ encryptedData }),\n    });\n    const data = await response.json();\n    return data;\n};\n\nfunction SinglePlayer() {\n    // 区域映射\n    const regionMapping = {\n        Asia: ['China', 'Mongolia', 'Indonesia', 'Malaysia', 'Turkey', 'India', 'Israel', 'Jordan', 'Uzbekistan'],\n        Oceania: ['Australia', 'New Zealand'],\n        Europe: ['France', 'Germany', 'Sweden', 'Denmark', 'Poland', 'Spain', 'Italy', \n                'Finland', 'Norway', 'Latvia', 'Estonia', 'Bosnia and Herzegovina', \n                'Montenegro', 'Serbia', 'Bulgaria', 'Czech Republic', 'Switzerland', \n                'Netherlands', 'Slovakia', 'Lithuania', 'Romania', 'United Kingdom', \n                'Ukraine', 'Belgium', 'Hungary', 'Portugal', 'Kosovo'],\n        Africa: ['South Africa'],\n        SouthAmerica: ['Brazil', 'Uruguay', 'Argentina', 'Chile', 'Guatemala'],\n        NorthAmerica: ['United States', 'Canada'],\n        CIS: ['Russia', 'Kazakhstan', 'Belarus']\n    };\n\n    const getRegion = (country) => {\n        for (const [region, countries] of Object.entries(regionMapping)) {\n            if (countries.includes(country)) {\n                return region;\n            }\n        }\n        return 'Other';\n    };\n\n    // 添加国家中英文映射\n    const countryTranslations = {\n        'China': '中国',\n        'Mongolia': '蒙古',\n        'Indonesia': '印度尼西亚',\n        'Malaysia': '马来西亚',\n        'Turkey': '土耳其',\n        'India': '印度',\n        'Israel': '以色列',\n        'Jordan': '约旦',\n        'Uzbekistan': '乌兹别克斯坦',\n        'Australia': '澳大利亚',\n        'New Zealand': '新西兰',\n        'France': '法国',\n        'Germany': '德国',\n        'Sweden': '瑞典',\n        'Denmark': '丹麦',\n        'Poland': '波兰',\n        'Spain': '西班牙',\n        'Italy': '意大利',\n        'Finland': '芬兰',\n        'Norway': '挪威',\n        'Latvia': '拉脱维亚',\n        'Estonia': '爱沙尼亚',\n        'Bosnia and Herzegovina': '波黑',\n        'Montenegro': '黑山',\n        'Serbia': '塞尔维亚',\n        'Bulgaria': '保加利亚',\n        'Czech Republic': '捷克',\n        'Switzerland': '瑞士',\n        'Netherlands': '荷兰',\n        'Slovakia': '斯洛伐克',\n        'Lithuania': '立陶宛',\n        'Romania': '罗马尼亚',\n        'United Kingdom': '英国',\n        'Ukraine': '乌克兰',\n        'Belgium': '比利时',\n        'Hungary': '匈牙利',\n        'Portugal': '葡萄牙',\n        'Kosovo': '科索沃',\n        'South Africa': '南非',\n        'Brazil': '巴西',\n        'Uruguay': '乌拉圭',\n        'Argentina': '阿根廷',\n        'Chile': '智利',\n        'Guatemala': '危地马拉',\n        'United States': '美国',\n        'Canada': '加拿大',\n        'Russia': '俄罗斯',\n        'Kazakhstan': '哈萨克斯坦',\n        'Belarus': '白俄罗斯'\n    };\n\n    const [player, setPlayer] = useState(null);\n    const [players, setPlayers] = useState({});\n    const [guess, setGuess] = useState('');\n    const [suggestions, setSuggestions] = useState([]);\n    const [guessHistory, setGuessHistory] = useState([]);\n    const [remainingGuesses, setRemainingGuesses] = useState(8);\n    const [showGameResult, setShowGameResult] = useState(false);\n    const [selectedIndex, setSelectedIndex] = useState(-1);\n\n    // 获取随机选手\n    const fetchRandomPlayer = () => {\n        fetch(`${API_BASE_URL}/api/random-player`)\n            .then(response => {\n                if (!response.ok) throw new Error('无法获取随机选手');\n                return response.json();\n            })\n            .then(async data => {\n                const decryptedData = await decryptData(data.encryptedData);\n                setPlayer(decryptedData);\n                setGuess('');\n                setSuggestions([]);\n                setGuessHistory([]);\n                setRemainingGuesses(8);\n                setShowGameResult(false);\n            })\n            .catch(error => console.error('获取随机选手失败:', error));\n    };\n\n    // 获取所有选手数据\n    useEffect(() => {\n        fetch(`${API_BASE_URL}/api/players`)\n            .then(response => {\n                if (!response.ok) throw new Error('无法获取选手数据');\n                return response.json();\n            })\n            .then(data => setPlayers(data))\n            .catch(err => console.error('获取玩家数据失败:', err));\n\n        fetchRandomPlayer();\n    }, []);\n\n    // 处理搜索建议\n    const handleInputChange = (e) => {\n        const value = e.target.value;\n        setGuess(value);\n        setSelectedIndex(-1);\n        \n        if (!value.trim()) {\n            setSuggestions([]);\n            return;\n        }\n\n        fetch(`${API_BASE_URL}/api/search-players?query=${value}`)\n            .then(response => response.json())\n            .then(data => {\n                setSuggestions(data);\n                // 确保建议列表可见\n                const suggestionsElement = document.querySelector('.suggestions-list');\n                if (suggestionsElement) {\n                    suggestionsElement.style.display = 'block';\n                }\n            })\n            .catch(error => console.error('搜索选手失败:', error));\n    };\n\n    const handleKeyDown = (e) => {\n        if (suggestions.length === 0) return;\n\n        switch (e.key) {\n            case 'ArrowDown':\n                e.preventDefault();\n                const nextIndex = selectedIndex < suggestions.length - 1 ? selectedIndex + 1 : selectedIndex;\n                setSelectedIndex(nextIndex);\n                if (nextIndex >= 0) {\n                    setGuess(suggestions[nextIndex].name);\n                }\n                break;\n            case 'ArrowUp':\n                e.preventDefault();\n                const prevIndex = selectedIndex > 0 ? selectedIndex - 1 : 0;\n                setSelectedIndex(prevIndex);\n                if (prevIndex >= 0) {\n                    setGuess(suggestions[prevIndex].name);\n                }\n                break;\n            case 'Enter':\n                e.preventDefault();\n                if (selectedIndex >= 0) {\n                    submitGuessWithName(suggestions[selectedIndex].name);\n                    setSuggestions([]);\n                    setSelectedIndex(-1);\n                } else if (guess.trim()) {\n                    submitGuess();\n                }\n                break;\n            default:\n                break;\n        }\n    };\n\n    // 新增函数：提取纯队伍名称（移除角色后缀）\n    const getTeamName = (team) => {\n        return team.replace(/\\s*\\((coach|benched)\\)$/i, '');\n    };\n\n    // 添加一个新的函数来处理直接用名字提交\n    const submitGuessWithName = (playerName) => {\n        if (!player || remainingGuesses <= 0) return;\n\n        let guessedPlayer = players[playerName];\n        \n        if (!guessedPlayer) {\n            const matchedEntry = Object.entries(players).find(\n                ([name]) => name.toLowerCase() === playerName.toLowerCase()\n            );\n            \n            if (matchedEntry) {\n                guessedPlayer = matchedEntry[1];\n            }\n        }\n\n        if (!guessedPlayer) {\n            setGuess('');\n            return;\n        }\n\n        // 使用传入的 playerName 构建新的猜测数据\n        const newGuess = {\n            name: playerName,\n            team: guessedPlayer.team,\n            teamCorrect: getTeamName(guessedPlayer.team) === getTeamName(player.team),\n            country: countryTranslations[guessedPlayer.country] || guessedPlayer.country,\n            countryCorrect: String(guessedPlayer.country).toLowerCase() === String(player.country).toLowerCase(),\n            countryRegion: getRegion(guessedPlayer.country),\n            targetCountryRegion: getRegion(player.country),\n            birth_year: compareValues(guessedPlayer.birth_year, player.birth_year),\n            guessedAge: 2025 - guessedPlayer.birth_year, // 修改为2025年\n            targetAge: 2025 - player.birth_year, // 添加目标年龄\n            role: guessedPlayer.role,\n            roleCorrect: guessedPlayer.role.toLowerCase() === player.role.toLowerCase(),\n            majapp: compareMajors(guessedPlayer.majapp, player.majapp),\n            guessedMajapp: guessedPlayer.majapp,\n            targetMajapp: player.majapp // 添加目标 Major 次数\n        };\n\n        setGuessHistory(prev => [...prev, newGuess]);\n        setRemainingGuesses(prev => {\n            const newRemaining = prev - 1;\n            // 确保进度条更新\n            document.querySelector('.progress-bar').style.width = `${(newRemaining / 8) * 100}%`;\n            return newRemaining;\n        });\n        setGuess('');\n        setSuggestions([]);\n\n        // 检查是否猜对或用完猜测次数\n        if (playerName.toLowerCase() === player.hiddenName.toLowerCase() || remainingGuesses - 1 === 0) {\n            setShowGameResult(true);\n        }\n    };\n\n    // 提交猜测\n    const submitGuess = () => {\n        if (!player || remainingGuesses <= 0 || !guess.trim()) return;\n\n        // 先尝试完全匹配\n        let guessedPlayer = players[guess];\n        \n        // 如果完全匹配未找到，再尝试不区分大小写的匹配\n        if (!guessedPlayer) {\n            const matchedEntry = Object.entries(players).find(\n                ([name]) => name.toLowerCase() === guess.toLowerCase()\n            );\n            \n            if (matchedEntry) {\n                setGuess(matchedEntry[0]); // 设置为正确的大小写形式\n                guessedPlayer = matchedEntry[1];\n            }\n        }\n\n        if (!guessedPlayer) {\n            setGuess('');\n            return;\n        }\n\n        // 构建新的猜测数据\n        const newGuess = {\n            name: guess,\n            team: guessedPlayer.team,\n            teamCorrect: getTeamName(guessedPlayer.team) === getTeamName(player.team),\n            country: countryTranslations[guessedPlayer.country] || guessedPlayer.country,\n            countryCorrect: String(guessedPlayer.country).toLowerCase() === String(player.country).toLowerCase(),\n            countryRegion: getRegion(guessedPlayer.country),\n            targetCountryRegion: getRegion(player.country),\n            birth_year: compareValues(guessedPlayer.birth_year, player.birth_year),\n            guessedAge: 2025 - guessedPlayer.birth_year, // 修改为2025年\n            targetAge: 2025 - player.birth_year, // 添加目标年龄\n            role: guessedPlayer.role,\n            roleCorrect: guessedPlayer.role.toLowerCase() === player.role.toLowerCase(),\n            majapp: compareMajors(guessedPlayer.majapp, player.majapp),\n            guessedMajapp: guessedPlayer.majapp,\n            targetMajapp: player.majapp // 添加目标 Major 次数\n        };\n\n        setGuessHistory(prev => [...prev, newGuess]);\n        setRemainingGuesses(prev => {\n            const newRemaining = prev - 1;\n            // 确保进度条更新\n            document.querySelector('.progress-bar').style.width = `${(newRemaining / 8) * 100}%`;\n            return newRemaining;\n        });\n        setGuess('');\n        setSuggestions([]);\n\n        // 检查是否猜对或用完猜测次数\n        if (guess.toLowerCase() === player.hiddenName.toLowerCase() || remainingGuesses - 1 === 0) {\n            setShowGameResult(true);\n        }\n    };\n\n    // 修改比较函数的判定逻辑\n    const compareValues = (guessed, target) => {\n        if (guessed === target) return 'correct';\n        const diff = Math.abs(guessed - target);\n        if (diff <= 3) return 'close'; // 修改为 3 年内为接近\n        return guessed > target ? 'higher' : 'lower';\n    };\n\n    const compareMajors = (guessed, target) => {\n        if (guessed === target) return 'correct';\n        const diff = Math.abs(guessed - target);\n        if (diff <= 2) return 'close'; // 修改为 2 次以内为接近\n        return guessed > target ? 'higher' : 'lower';\n    };\n\n    const handleContinueGame = () => {\n        setShowGameResult(false);\n        fetchRandomPlayer();\n    };\n\n    const handleStayHere = () => {\n        setShowGameResult(false);\n    };\n\n    // 添加滚动到底部的函数\n    const scrollToBottom = () => {\n        const element = document.querySelector('.single-player');\n        if (element) {\n            element.scrollTo({\n                top: element.scrollHeight,\n                behavior: 'smooth'\n            });\n        }\n    };\n\n    // 在添加新的猜测历史后滚动到底部\n    useEffect(() => {\n        if (guessHistory.length > 0) {\n            scrollToBottom();\n        }\n    }, [guessHistory]);\n\n    return (\n        <div className=\"single-player\">\n            <div className=\"game-area\">\n                {/* 输入区域 */}\n                <div className=\"input-section\">\n                    <input\n                        type=\"text\"\n                        value={guess}\n                        onChange={handleInputChange}\n                        onKeyDown={handleKeyDown}\n                        placeholder=\"输入选手名字\"\n                        disabled={!player || remainingGuesses <= 0}\n                        className=\"player-input\"\n                    />\n                    {/* 建议列表 */}\n                    {suggestions.length > 0 && (\n                        <div className=\"suggestions-list\">\n                            {suggestions.map((suggestion, index) => (\n                                <div\n                                    key={suggestion.name}\n                                    className={`suggestion-item ${index === selectedIndex ? 'selected' : ''}`}\n                                    onClick={() => {\n                                        setGuess(suggestion.name);\n                                        setSuggestions([]);\n                                        setSelectedIndex(-1);\n                                    }}\n                                >\n                                    {suggestion.name}\n                                </div>\n                            ))}\n                        </div>\n                    )}\n                </div>\n\n                {/* 按钮区域 */}\n                <div className=\"button-group\">\n                    <button \n                        onClick={submitGuess}\n                        disabled={!player || remainingGuesses <= 0}\n                        className=\"submit-button\"\n                    >\n                        提交\n                    </button>\n                    <button \n                        onClick={fetchRandomPlayer}\n                        className=\"reset-button\"\n                    >\n                        换一个选手\n                    </button>\n                </div>\n\n                {/* 历史记录 */}\n                <GuessHistory history={guessHistory} player={player} />\n\n                {/* 进度条 */}\n                <div className=\"progress-container\">\n                    <div \n                        className=\"progress-bar\"\n                        style={{width: `${(remainingGuesses / 8) * 100}%`}}\n                    >\n                        {remainingGuesses}\n                    </div>\n                </div>\n\n                {/* 修改游戏结果弹窗的内容 */}\n                {showGameResult && (\n                    <div className=\"game-result-modal\">\n                        <div className=\"game-result-title\">\n                            {guess.toLowerCase() === player.hiddenName.toLowerCase() ? '恭喜猜对了！' : '游戏结束'}\n                        </div>\n                        <div className=\"game-result-content\">\n                            <div className=\"player-info-item\">\n                                <span className=\"player-info-label\">选手名字:</span>\n                                <span className=\"player-info-value\">{player.hiddenName}</span>\n                            </div>\n                            <div className=\"player-info-item\">\n                                <span className=\"player-info-label\">所属战队:</span>\n                                <span className=\"player-info-value\">{player.team}</span>\n                            </div>\n                            <div className=\"player-info-item\">\n                                <span className=\"player-info-label\">国家及地区:</span>\n                                <span className=\"player-info-value\">\n                                    {countryTranslations[player.country] || player.country}\n                                </span>\n                            </div>\n                            <div className=\"player-info-item\">\n                                <span className=\"player-info-label\">出生年份:</span>\n                                <span className=\"player-info-value\">{player.birth_year}</span>\n                            </div>\n                            <div className=\"player-info-item\">\n                                <span className=\"player-info-label\">游戏角色:</span>\n                                <span className=\"player-info-value\">{player.role}</span>\n                            </div>\n                            <div className=\"player-info-item\">\n                                <span className=\"player-info-label\">Major次数:</span>\n                                <span className=\"player-info-value\">{player.majapp}</span>\n                            </div>\n                            <a \n                                className=\"game-result-link\"\n                                href={players[player.hiddenName]?.link}\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                            >\n                                查看选手资料 →\n                            </a>\n                        </div>\n                        <div className=\"game-result-buttons\">\n                            <button className=\"button-continue\" onClick={handleContinueGame}>\n                                下一个选手\n                            </button>\n                            <button className=\"button-stay\" onClick={handleStayHere}>\n                                查看历史记录\n                            </button>\n                        </div>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default SinglePlayer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}