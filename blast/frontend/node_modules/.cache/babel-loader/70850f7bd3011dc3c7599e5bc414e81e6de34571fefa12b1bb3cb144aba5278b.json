{"ast":null,"code":"var _jsxFileName = \"/Users/thecold/Desktop/courses/2025 Spring/Software Engneering/Final Project/blast/frontend/src/components/GameRoom.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport './GameRoom.css';\nimport { API_BASE_URL } from '../config';\nimport GuessHistory from './GuessHistory';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst decryptData = async encryptedData => {\n  const response = await fetch(`${API_BASE_URL}/api/decrypt`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      encryptedData\n    })\n  });\n  return await response.json();\n};\nfunction GameRoom({\n  roomId,\n  socket,\n  scores,\n  currentRound,\n  maxRounds,\n  isReady,\n  onReady\n}) {\n  _s();\n  const [gameState, setGameState] = useState({\n    currentPlayer: null,\n    timeLeft: 60,\n    guess: '',\n    remainingGuesses: 8,\n    guessHistory: []\n  });\n  const [playersGuesses, setPlayersGuesses] = useState({});\n  const [messages, setMessages] = useState([]);\n  const [suggestions, setSuggestions] = useState([]);\n  const [selectedIndex, setSelectedIndex] = useState(-1);\n  const [newMessage, setNewMessage] = useState('');\n  const [showGameResult, setShowGameResult] = useState(false);\n  const [players, setPlayers] = useState({});\n  const [isChatExpanded, setIsChatExpanded] = useState(true);\n  const regionMapping = {\n    Asia: ['China', 'Mongolia', 'Indonesia', 'Malaysia', 'Turkey', 'India'],\n    Europe: ['France', 'Germany', 'Sweden', 'Denmark', 'Poland', 'Spain', 'Italy', 'Ukraine', 'Finland', 'Norway']\n  };\n  const getRegion = country => {\n    for (const [region, countries] of Object.entries(regionMapping)) {\n      if (countries.includes(country)) {\n        return region;\n      }\n    }\n    return 'Other';\n  };\n  const getAge = birthYear => 2025 - birthYear;\n  const guessHistoryRef = useRef([]);\n  const playersRef = useRef({});\n  useEffect(() => {\n    fetch(`${API_BASE_URL}/api/players`).then(res => res.json()).then(data => setPlayers(data)).catch(err => console.error('获取玩家数据失败:', err));\n  }, []);\n\n  // 统一的事件处理\n  useEffect(() => {\n    if (!socket) return;\n    console.log(\"Setting up socket event listeners\");\n    const handleRoundStart = data => {\n      console.log('Round started with player:', data);\n      const simplePlayer = {\n        country: data.country,\n        team: data.team,\n        role: data.role,\n        majapp: data.majapp,\n        hiddenName: data.hiddenName,\n        birth_year: data.birth_year\n      };\n      setGameState(prev => ({\n        ...prev,\n        currentPlayer: simplePlayer,\n        remainingGuesses: 8,\n        timeLeft: 60,\n        guess: ''\n      }));\n      setPlayersGuesses({});\n\n      // 清理历史记录\n      guessHistoryRef.current = [];\n    };\n    const handleRoundEnd = ({\n      winner,\n      correctAnswer\n    }) => {\n      console.log('Round ended, correct answer:', correctAnswer);\n      setGameState(prev => ({\n        ...prev,\n        showAnswer: true,\n        currentPlayer: {\n          ...prev.currentPlayer,\n          hiddenName: correctAnswer\n        }\n      }));\n      setShowGameResult(true);\n    };\n    const handleGuessResult = ({\n      playerId,\n      guess,\n      result\n    }) => {\n      console.log('Guess result received:', playerId, guess, result);\n      if (!result) return;\n\n      // 使用单层数据结构\n      setPlayersGuesses(prev => {\n        const newGuesses = {\n          ...prev\n        };\n        if (!newGuesses[playerId]) {\n          newGuesses[playerId] = [];\n        }\n        newGuesses[playerId].push({\n          name: guess,\n          ...result,\n          timestamp: Date.now()\n        });\n        return newGuesses;\n      });\n    };\n    const handleChatMessage = message => {\n      // 只有当消息不是自己发送的时候才添加到消息列表\n      if (message.id !== socket.id) {\n        setMessages(prev => [...prev, message]);\n      }\n    };\n    const handleChatHistory = history => {\n      // 设置历史聊天记录\n      setMessages(history);\n    };\n\n    // 注册所有事件监听器\n    socket.on('roundStart', handleRoundStart);\n    socket.on('roundEnd', handleRoundEnd);\n    socket.on('guessResult', handleGuessResult);\n    socket.on('chatMessage', handleChatMessage);\n    socket.on('chatHistory', handleChatHistory);\n\n    // 清理函数\n    return () => {\n      socket.off('roundStart', handleRoundStart);\n      socket.off('roundEnd', handleRoundEnd);\n      socket.off('guessResult', handleGuessResult);\n      socket.off('chatMessage', handleChatMessage);\n      socket.off('chatHistory', handleChatHistory);\n    };\n  }, [socket]);\n\n  // 添加倒计时定时器\n  useEffect(() => {\n    let timer;\n    if (gameState.timeLeft > 0 && gameState.currentPlayer) {\n      console.log(`Countdown: ${gameState.timeLeft} seconds left`);\n      timer = setInterval(() => {\n        setGameState(prev => ({\n          ...prev,\n          timeLeft: prev.timeLeft - 1\n        }));\n      }, 1000);\n    } else if (gameState.timeLeft === 0 && gameState.currentPlayer) {\n      // 时间到，显示结果\n      console.log('Time is up, showing result');\n      setShowGameResult(true);\n    }\n    return () => {\n      if (timer) clearInterval(timer);\n    };\n  }, [gameState.timeLeft, gameState.currentPlayer]);\n  const handleInputChange = e => {\n    const value = e.target.value;\n    setGameState(prev => ({\n      ...prev,\n      guess: value\n    }));\n    if (!value.trim()) {\n      setSuggestions([]);\n      return;\n    }\n\n    // 使用encodeURIComponent确保查询参数正确编码\n    fetch(`${API_BASE_URL}/api/search-players?query=${encodeURIComponent(value)}`).then(response => response.json()).then(data => {\n      setSuggestions(data);\n      // 确保建议列表可见\n      const suggestionsElement = document.querySelector('.suggestions-list');\n      if (suggestionsElement) {\n        suggestionsElement.style.display = 'block';\n      }\n    }).catch(error => console.error('搜索选手失败:', error));\n  };\n\n  // 改进的键盘事件处理，增加跨平台兼容性\n  const handleKeyDown = e => {\n    if (suggestions.length === 0) return;\n\n    // 获取键值，兼容不同浏览器和平台\n    const key = e.key || e.keyCode;\n\n    // 使用键值或键码进行判断\n    if (key === 'ArrowDown' || key === 40) {\n      e.preventDefault();\n      const nextIndex = selectedIndex < suggestions.length - 1 ? selectedIndex + 1 : selectedIndex;\n      setSelectedIndex(nextIndex);\n      if (nextIndex >= 0) {\n        setGameState(prev => ({\n          ...prev,\n          guess: suggestions[nextIndex].name\n        }));\n      }\n    } else if (key === 'ArrowUp' || key === 38) {\n      e.preventDefault();\n      const prevIndex = selectedIndex > 0 ? selectedIndex - 1 : 0;\n      setSelectedIndex(prevIndex);\n      if (prevIndex >= 0) {\n        setGameState(prev => ({\n          ...prev,\n          guess: suggestions[prevIndex].name\n        }));\n      }\n    } else if (key === 'Enter' || key === 13) {\n      e.preventDefault();\n      if (selectedIndex >= 0) {\n        submitGuessWithName(suggestions[selectedIndex].name);\n        setSuggestions([]);\n        setSelectedIndex(-1);\n      } else if (gameState.guess.trim()) {\n        handleGuess();\n      }\n    }\n  };\n  const submitGuessWithName = playerName => {\n    if (!gameState.currentPlayer || gameState.remainingGuesses <= 0) return;\n    const guessedPlayer = players[playerName];\n    if (!guessedPlayer) return;\n\n    // 发送简化的猜测数据\n    const guessData = {\n      roomId,\n      guess: playerName,\n      playerData: {\n        name: playerName,\n        team: guessedPlayer.team,\n        country: guessedPlayer.country,\n        role: guessedPlayer.role,\n        majapp: guessedPlayer.majapp\n      }\n    };\n    socket.emit('submitGuess', guessData);\n    setGameState(prev => ({\n      ...prev,\n      remainingGuesses: prev.remainingGuesses - 1,\n      guess: ''\n    }));\n    setSuggestions([]);\n  };\n  const handleGuess = () => {\n    if (!gameState.currentPlayer || gameState.remainingGuesses <= 0 || !gameState.guess.trim()) return;\n    const guessedPlayer = players[gameState.guess];\n    if (!guessedPlayer) return;\n\n    // 发送简化的猜测数据\n    const guessData = {\n      roomId,\n      guess: gameState.guess,\n      playerData: {\n        name: gameState.guess,\n        team: guessedPlayer.team,\n        country: guessedPlayer.country,\n        role: guessedPlayer.role,\n        majapp: guessedPlayer.majapp\n      }\n    };\n    socket.emit('submitGuess', guessData);\n    setGameState(prev => ({\n      ...prev,\n      remainingGuesses: prev.remainingGuesses - 1,\n      guess: ''\n    }));\n    setSuggestions([]);\n  };\n  const sendMessage = () => {\n    if (!newMessage.trim() || !socket) return;\n    const message = {\n      id: socket.id,\n      content: newMessage,\n      timestamp: Date.now()\n    };\n\n    // 先添加到本地消息列表，确保立即显示\n    setMessages(prev => [...prev, message]);\n\n    // 然后发送到服务器\n    socket.emit('chatMessage', {\n      roomId,\n      ...message\n    });\n    setNewMessage('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-room\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-room-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-main\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"\\u623F\\u95F4 #\", roomId]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"game-status\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"\\u56DE\\u5408: \", currentRound, \"/\", maxRounds]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"\\u5269\\u4F59\\u65F6\\u95F4: \", gameState.timeLeft, \"\\u79D2\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: gameState.guess,\n            onChange: handleInputChange,\n            onKeyDown: handleKeyDown,\n            placeholder: \"\\u8F93\\u5165\\u9009\\u624B\\u540D\\u5B57\",\n            disabled: !gameState.currentPlayer || gameState.remainingGuesses <= 0,\n            className: \"player-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 25\n          }, this), suggestions.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"suggestions-list\",\n            children: suggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `suggestion-item ${index === selectedIndex ? 'selected' : ''}`,\n              onClick: () => {\n                setGameState(prev => ({\n                  ...prev,\n                  guess: suggestion.name\n                }));\n                setSuggestions([]);\n                setSelectedIndex(-1);\n              },\n              children: suggestion.name\n            }, suggestion.name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-group\",\n          children: gameState.currentPlayer ? /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"submit-guess\",\n            onClick: handleGuess,\n            disabled: gameState.remainingGuesses <= 0,\n            children: \"\\u63D0\\u4EA4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `ready-button ${isReady ? 'ready' : ''}`,\n            onClick: onReady,\n            disabled: isReady,\n            children: isReady ? '已准备' : '准备'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-bar\",\n            style: {\n              width: `${gameState.remainingGuesses / 8 * 100}%`\n            },\n            children: gameState.remainingGuesses\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"guess-histories\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"player-history\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"\\u4F60\\u7684\\u731C\\u6D4B\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(GuessHistory, {\n              history: gameState.guessHistory\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"player-history\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"\\u5BF9\\u624B\\u7684\\u731C\\u6D4B\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 29\n            }, this), Object.entries(playersGuesses).map(([playerId, guesses]) => playerId !== socket.id && /*#__PURE__*/_jsxDEV(GuessHistory, {\n              history: guesses\n            }, playerId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 37\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `chat-section ${isChatExpanded ? 'expanded' : 'collapsed'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-header\",\n          onClick: () => setIsChatExpanded(!isChatExpanded),\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\u804A\\u5929\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"toggle-button\",\n            children: isChatExpanded ? '↓' : '↑'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messages-container\",\n          children: messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message ${msg.id === socket.id ? 'self' : ''}`,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"message-time\",\n              children: new Date(msg.timestamp).toLocaleTimeString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"message-content\",\n              children: msg.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 33\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newMessage,\n            onChange: e => setNewMessage(e.target.value),\n            onKeyPress: e => e.key === 'Enter' && sendMessage(),\n            placeholder: \"\\u53D1\\u9001\\u6D88\\u606F...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: sendMessage,\n            children: \"\\u53D1\\u9001\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 13\n    }, this), showGameResult && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-result-modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\u56DE\\u5408\\u7ED3\\u675F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u6B63\\u786E\\u7B54\\u6848: \", gameState.currentPlayer.hiddenName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowGameResult(false),\n        children: \"\\u7EE7\\u7EED\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 305,\n    columnNumber: 9\n  }, this);\n}\n_s(GameRoom, \"HMTrsuDSBofp7tdaSbFiqJxER44=\");\n_c = GameRoom;\nexport default _c2 = /*#__PURE__*/React.memo(GameRoom); // 使用 memo 优化渲染\nvar _c, _c2;\n$RefreshReg$(_c, \"GameRoom\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","API_BASE_URL","GuessHistory","jsxDEV","_jsxDEV","decryptData","encryptedData","response","fetch","method","headers","body","JSON","stringify","json","GameRoom","roomId","socket","scores","currentRound","maxRounds","isReady","onReady","_s","gameState","setGameState","currentPlayer","timeLeft","guess","remainingGuesses","guessHistory","playersGuesses","setPlayersGuesses","messages","setMessages","suggestions","setSuggestions","selectedIndex","setSelectedIndex","newMessage","setNewMessage","showGameResult","setShowGameResult","players","setPlayers","isChatExpanded","setIsChatExpanded","regionMapping","Asia","Europe","getRegion","country","region","countries","Object","entries","includes","getAge","birthYear","guessHistoryRef","playersRef","then","res","data","catch","err","console","error","log","handleRoundStart","simplePlayer","team","role","majapp","hiddenName","birth_year","prev","current","handleRoundEnd","winner","correctAnswer","showAnswer","handleGuessResult","playerId","result","newGuesses","push","name","timestamp","Date","now","handleChatMessage","message","id","handleChatHistory","history","on","off","timer","setInterval","clearInterval","handleInputChange","e","value","target","trim","encodeURIComponent","suggestionsElement","document","querySelector","style","display","handleKeyDown","length","key","keyCode","preventDefault","nextIndex","prevIndex","submitGuessWithName","handleGuess","playerName","guessedPlayer","guessData","playerData","emit","sendMessage","content","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onKeyDown","placeholder","disabled","map","suggestion","index","onClick","width","guesses","msg","idx","toLocaleTimeString","onKeyPress","_c","_c2","memo","$RefreshReg$"],"sources":["/Users/thecold/Desktop/courses/2025 Spring/Software Engneering/Final Project/blast/frontend/src/components/GameRoom.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport './GameRoom.css';\nimport { API_BASE_URL } from '../config';\nimport GuessHistory from './GuessHistory';\n\nconst decryptData = async (encryptedData) => {\n    const response = await fetch(`${API_BASE_URL}/api/decrypt`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ encryptedData }),\n    });\n    return await response.json();\n};\n\nfunction GameRoom({ roomId, socket, scores, currentRound, maxRounds, isReady, onReady }) {\n    const [gameState, setGameState] = useState({\n        currentPlayer: null,\n        timeLeft: 60,\n        guess: '',\n        remainingGuesses: 8,\n        guessHistory: [], \n    });\n    \n    const [playersGuesses, setPlayersGuesses] = useState({}); \n    const [messages, setMessages] = useState([]);\n\n    const [suggestions, setSuggestions] = useState([]);\n    const [selectedIndex, setSelectedIndex] = useState(-1);\n    const [newMessage, setNewMessage] = useState('');\n    const [showGameResult, setShowGameResult] = useState(false);\n    const [players, setPlayers] = useState({});\n    const [isChatExpanded, setIsChatExpanded] = useState(true);\n\n    const regionMapping = {\n        Asia: ['China', 'Mongolia', 'Indonesia', 'Malaysia', 'Turkey', 'India'],\n        Europe: ['France', 'Germany', 'Sweden', 'Denmark', 'Poland', 'Spain', 'Italy', 'Ukraine', 'Finland', 'Norway'],\n    };\n\n    const getRegion = (country) => {\n        for (const [region, countries] of Object.entries(regionMapping)) {\n            if (countries.includes(country)) {\n                return region;\n            }\n        }\n        return 'Other';\n    };\n\n    const getAge = (birthYear) => 2025 - birthYear;\n\n    const guessHistoryRef = useRef([]);\n    const playersRef = useRef({});\n\n    useEffect(() => {\n        fetch(`${API_BASE_URL}/api/players`)\n            .then(res => res.json())\n            .then(data => setPlayers(data))\n            .catch(err => console.error('获取玩家数据失败:', err));\n    }, []);\n\n    // 统一的事件处理\n    useEffect(() => {\n        if (!socket) return;\n\n        console.log(\"Setting up socket event listeners\");\n\n        const handleRoundStart = (data) => {\n            console.log('Round started with player:', data);\n            const simplePlayer = {\n                country: data.country,\n                team: data.team,\n                role: data.role,\n                majapp: data.majapp,\n                hiddenName: data.hiddenName,\n                birth_year: data.birth_year\n            };\n            \n            setGameState(prev => ({\n                ...prev,\n                currentPlayer: simplePlayer,\n                remainingGuesses: 8,\n                timeLeft: 60,\n                guess: ''\n            }));\n            setPlayersGuesses({});\n            \n            // 清理历史记录\n            guessHistoryRef.current = [];\n        };\n\n        const handleRoundEnd = ({ winner, correctAnswer }) => {\n            console.log('Round ended, correct answer:', correctAnswer);\n            setGameState(prev => ({\n                ...prev,\n                showAnswer: true,\n                currentPlayer: { ...prev.currentPlayer, hiddenName: correctAnswer }\n            }));\n            setShowGameResult(true);\n        };\n\n        const handleGuessResult = ({ playerId, guess, result }) => {\n            console.log('Guess result received:', playerId, guess, result);\n            if (!result) return;\n            \n            // 使用单层数据结构\n            setPlayersGuesses(prev => {\n                const newGuesses = { ...prev };\n                if (!newGuesses[playerId]) {\n                    newGuesses[playerId] = [];\n                }\n                newGuesses[playerId].push({\n                    name: guess,\n                    ...result,\n                    timestamp: Date.now()\n                });\n                return newGuesses;\n            });\n        };\n\n        const handleChatMessage = (message) => {\n            // 只有当消息不是自己发送的时候才添加到消息列表\n            if (message.id !== socket.id) {\n                setMessages(prev => [...prev, message]);\n            }\n        };\n\n        const handleChatHistory = (history) => {\n            // 设置历史聊天记录\n            setMessages(history);\n        };\n\n        // 注册所有事件监听器\n        socket.on('roundStart', handleRoundStart);\n        socket.on('roundEnd', handleRoundEnd);\n        socket.on('guessResult', handleGuessResult);\n        socket.on('chatMessage', handleChatMessage);\n        socket.on('chatHistory', handleChatHistory);\n\n        // 清理函数\n        return () => {\n            socket.off('roundStart', handleRoundStart);\n            socket.off('roundEnd', handleRoundEnd);\n            socket.off('guessResult', handleGuessResult);\n            socket.off('chatMessage', handleChatMessage);\n            socket.off('chatHistory', handleChatHistory);\n        };\n    }, [socket]);\n\n    // 添加倒计时定时器\n    useEffect(() => {\n        let timer;\n        if (gameState.timeLeft > 0 && gameState.currentPlayer) {\n            console.log(`Countdown: ${gameState.timeLeft} seconds left`);\n            timer = setInterval(() => {\n                setGameState(prev => ({\n                    ...prev,\n                    timeLeft: prev.timeLeft - 1\n                }));\n            }, 1000);\n        } else if (gameState.timeLeft === 0 && gameState.currentPlayer) {\n            // 时间到，显示结果\n            console.log('Time is up, showing result');\n            setShowGameResult(true);\n        }\n\n        return () => {\n            if (timer) clearInterval(timer);\n        };\n    }, [gameState.timeLeft, gameState.currentPlayer]);\n\n    const handleInputChange = (e) => {\n        const value = e.target.value;\n        setGameState((prev) => ({ ...prev, guess: value }));\n        \n        if (!value.trim()) {\n            setSuggestions([]);\n            return;\n        }\n\n        // 使用encodeURIComponent确保查询参数正确编码\n        fetch(`${API_BASE_URL}/api/search-players?query=${encodeURIComponent(value)}`)\n            .then((response) => response.json())\n            .then((data) => {\n                setSuggestions(data);\n                // 确保建议列表可见\n                const suggestionsElement = document.querySelector('.suggestions-list');\n                if (suggestionsElement) {\n                    suggestionsElement.style.display = 'block';\n                }\n            })\n            .catch((error) => console.error('搜索选手失败:', error));\n    };\n\n    // 改进的键盘事件处理，增加跨平台兼容性\n    const handleKeyDown = (e) => {\n        if (suggestions.length === 0) return;\n\n        // 获取键值，兼容不同浏览器和平台\n        const key = e.key || e.keyCode;\n        \n        // 使用键值或键码进行判断\n        if (key === 'ArrowDown' || key === 40) {\n            e.preventDefault();\n            const nextIndex = selectedIndex < suggestions.length - 1 ? selectedIndex + 1 : selectedIndex;\n            setSelectedIndex(nextIndex);\n            if (nextIndex >= 0) {\n                setGameState(prev => ({ ...prev, guess: suggestions[nextIndex].name }));\n            }\n        } \n        else if (key === 'ArrowUp' || key === 38) {\n            e.preventDefault();\n            const prevIndex = selectedIndex > 0 ? selectedIndex - 1 : 0;\n            setSelectedIndex(prevIndex);\n            if (prevIndex >= 0) {\n                setGameState(prev => ({ ...prev, guess: suggestions[prevIndex].name }));\n            }\n        } \n        else if (key === 'Enter' || key === 13) {\n            e.preventDefault();\n            if (selectedIndex >= 0) {\n                submitGuessWithName(suggestions[selectedIndex].name);\n                setSuggestions([]);\n                setSelectedIndex(-1);\n            } else if (gameState.guess.trim()) {\n                handleGuess();\n            }\n        }\n    };\n\n    const submitGuessWithName = (playerName) => {\n        if (!gameState.currentPlayer || gameState.remainingGuesses <= 0) return;\n\n        const guessedPlayer = players[playerName];\n        if (!guessedPlayer) return;\n\n        // 发送简化的猜测数据\n        const guessData = {\n            roomId,\n            guess: playerName,\n            playerData: {\n                name: playerName,\n                team: guessedPlayer.team,\n                country: guessedPlayer.country,\n                role: guessedPlayer.role,\n                majapp: guessedPlayer.majapp\n            }\n        };\n\n        socket.emit('submitGuess', guessData);\n\n        setGameState(prev => ({\n            ...prev,\n            remainingGuesses: prev.remainingGuesses - 1,\n            guess: ''\n        }));\n        setSuggestions([]);\n    };\n\n    const handleGuess = () => {\n        if (!gameState.currentPlayer || gameState.remainingGuesses <= 0 || !gameState.guess.trim()) return;\n\n        const guessedPlayer = players[gameState.guess];\n        if (!guessedPlayer) return;\n\n        // 发送简化的猜测数据\n        const guessData = {\n            roomId,\n            guess: gameState.guess,\n            playerData: {\n                name: gameState.guess,\n                team: guessedPlayer.team,\n                country: guessedPlayer.country,\n                role: guessedPlayer.role,\n                majapp: guessedPlayer.majapp\n            }\n        };\n\n        socket.emit('submitGuess', guessData);\n\n        setGameState(prev => ({\n            ...prev,\n            remainingGuesses: prev.remainingGuesses - 1,\n            guess: ''\n        }));\n        setSuggestions([]);\n    };\n\n    const sendMessage = () => {\n        if (!newMessage.trim() || !socket) return;\n\n        const message = {\n            id: socket.id,\n            content: newMessage,\n            timestamp: Date.now(),\n        };\n\n        // 先添加到本地消息列表，确保立即显示\n        setMessages(prev => [...prev, message]);\n        \n        // 然后发送到服务器\n        socket.emit('chatMessage', { roomId, ...message });\n        setNewMessage('');\n    };\n\n    return (\n        <div className=\"game-room\">\n            <div className=\"game-room-container\">\n                {/* 左侧游戏区域 */}\n                <div className=\"game-main\">\n                    <div className=\"game-header\">\n                        <h2>房间 #{roomId}</h2>\n                        <div className=\"game-status\">\n                            <span>回合: {currentRound}/{maxRounds}</span>\n                            <span>剩余时间: {gameState.timeLeft}秒</span>\n                        </div>\n                    </div>\n\n                    {/* 单人模式风格的输入区域 */}\n                    <div className=\"input-section\">\n                        <input\n                            type=\"text\"\n                            value={gameState.guess}\n                            onChange={handleInputChange}\n                            onKeyDown={handleKeyDown}\n                            placeholder=\"输入选手名字\"\n                            disabled={!gameState.currentPlayer || gameState.remainingGuesses <= 0}\n                            className=\"player-input\"\n                        />\n                        {suggestions.length > 0 && (\n                            <div className=\"suggestions-list\">\n                                {suggestions.map((suggestion, index) => (\n                                    <div\n                                        key={suggestion.name}\n                                        className={`suggestion-item ${index === selectedIndex ? 'selected' : ''}`}\n                                        onClick={() => {\n                                            setGameState((prev) => ({ ...prev, guess: suggestion.name }));\n                                            setSuggestions([]);\n                                            setSelectedIndex(-1);\n                                        }}\n                                    >\n                                        {suggestion.name}\n                                    </div>\n                                ))}\n                            </div>\n                        )}\n                    </div>\n\n                    <div className=\"button-group\">\n                        {gameState.currentPlayer ? (\n                            <button\n                                className=\"submit-guess\"\n                                onClick={handleGuess}\n                                disabled={gameState.remainingGuesses <= 0}\n                            >\n                                提交\n                            </button>\n                        ) : (\n                            <button\n                                className={`ready-button ${isReady ? 'ready' : ''}`}\n                                onClick={onReady}\n                                disabled={isReady}\n                            >\n                                {isReady ? '已准备' : '准备'}\n                            </button>\n                        )}\n                    </div>\n\n                    <div className=\"progress-container\">\n                        <div\n                            className=\"progress-bar\"\n                            style={{width: `${(gameState.remainingGuesses / 8) * 100}%`}}\n                        >\n                            {gameState.remainingGuesses}\n                        </div>\n                    </div>\n\n                    {/* 将猜测历史区域分为两列显示 */}\n                    <div className=\"guess-histories\">\n                        <div className=\"player-history\">\n                            <h3>你的猜测</h3>\n                            <GuessHistory history={gameState.guessHistory} />\n                        </div>\n                        <div className=\"player-history\">\n                            <h3>对手的猜测</h3>\n                            {Object.entries(playersGuesses).map(([playerId, guesses]) => (\n                                playerId !== socket.id && (\n                                    <GuessHistory key={playerId} history={guesses} />\n                                )\n                            ))}\n                        </div>\n                    </div>\n                </div>\n\n                <div className={`chat-section ${isChatExpanded ? 'expanded' : 'collapsed'}`}>\n                    <div className=\"chat-header\" onClick={() => setIsChatExpanded(!isChatExpanded)}>\n                        <h3>聊天</h3>\n                        <button className=\"toggle-button\">\n                            {isChatExpanded ? '↓' : '↑'}\n                        </button>\n                    </div>\n                    <div className=\"messages-container\">\n                        {messages.map((msg, idx) => (\n                            <div key={idx} className={`message ${msg.id === socket.id ? 'self' : ''}`}>\n                                <span className=\"message-time\">\n                                    {new Date(msg.timestamp).toLocaleTimeString()}\n                                </span>\n                                <span className=\"message-content\">{msg.content}</span>\n                            </div>\n                        ))}\n                    </div>\n                    <div className=\"message-input\">\n                        <input\n                            type=\"text\"\n                            value={newMessage}\n                            onChange={(e) => setNewMessage(e.target.value)}\n                            onKeyPress={(e) => e.key === 'Enter' && sendMessage()}\n                            placeholder=\"发送消息...\"\n                        />\n                        <button onClick={sendMessage}>发送</button>\n                    </div>\n                </div>\n            </div>\n\n            {showGameResult && (\n                <div className=\"game-result-modal\">\n                    <h3>回合结束</h3>\n                    <p>正确答案: {gameState.currentPlayer.hiddenName}</p>\n                    <button onClick={() => setShowGameResult(false)}>继续</button>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default React.memo(GameRoom); // 使用 memo 优化渲染\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}