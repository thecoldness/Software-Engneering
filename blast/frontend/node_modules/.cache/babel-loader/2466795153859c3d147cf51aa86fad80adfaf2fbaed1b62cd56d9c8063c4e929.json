{"ast":null,"code":"var _jsxFileName = \"/Users/thecold/Desktop/courses/2025 Spring/Software Engneering/Final Project/blast/frontend/src/components/GameRoom.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport './GameRoom.css';\nimport { API_BASE_URL } from '../config';\nimport GuessHistory from './GuessHistory';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst decryptData = async encryptedData => {\n  const response = await fetch(`${API_BASE_URL}/api/decrypt`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      encryptedData\n    })\n  });\n  return await response.json();\n};\nfunction GameRoom({\n  roomId,\n  socket,\n  scores,\n  currentRound,\n  maxRounds,\n  isReady,\n  onReady,\n  onReturnToLobby\n}) {\n  _s();\n  var _players$gameState$cu, _players$gameState$cu2;\n  const [gameState, setGameState] = useState({\n    currentPlayer: null,\n    timeLeft: 60,\n    guess: '',\n    remainingGuesses: 8,\n    guessHistory: []\n  });\n  const [playersGuesses, setPlayersGuesses] = useState({});\n  const [messages, setMessages] = useState([]);\n  const [suggestions, setSuggestions] = useState([]);\n  const [selectedIndex, setSelectedIndex] = useState(-1);\n  const [newMessage, setNewMessage] = useState('');\n  const [showGameResult, setShowGameResult] = useState(false);\n  const [players, setPlayers] = useState({});\n  const [isChatExpanded, setIsChatExpanded] = useState(true);\n  const [startCountdown, setStartCountdown] = useState(null);\n\n  // 区域映射 - 与 SinglePlayer 保持一致\n  const regionMapping = {\n    Asia: ['China', 'Mongolia', 'Indonesia', 'Malaysia', 'Turkey', 'India', 'Israel', 'Jordan', 'Uzbekistan'],\n    Oceania: ['Australia', 'New Zealand'],\n    Europe: ['France', 'Germany', 'Sweden', 'Denmark', 'Poland', 'Spain', 'Italy', 'Finland', 'Norway', 'Latvia', 'Estonia', 'Bosnia and Herzegovina', 'Montenegro', 'Serbia', 'Bulgaria', 'Czech Republic', 'Switzerland', 'Netherlands', 'Slovakia', 'Lithuania', 'Romania', 'United Kingdom', 'Ukraine', 'Belgium', 'Hungary', 'Portugal', 'Kosovo'],\n    Africa: ['South Africa'],\n    SouthAmerica: ['Brazil', 'Uruguay', 'Argentina', 'Chile', 'Guatemala'],\n    NorthAmerica: ['United States', 'Canada'],\n    CIS: ['Russia', 'Kazakhstan', 'Belarus']\n  };\n  const getRegion = country => {\n    for (const [region, countries] of Object.entries(regionMapping)) {\n      if (countries.includes(country)) {\n        return region;\n      }\n    }\n    return 'Other';\n  };\n\n  // 添加国家中英文映射 - 与 SinglePlayer 保持一致\n  const countryTranslations = {\n    'China': '中国',\n    'Mongolia': '蒙古',\n    'Indonesia': '印度尼西亚',\n    'Malaysia': '马来西亚',\n    'Turkey': '土耳其',\n    'India': '印度',\n    'Israel': '以色列',\n    'Jordan': '约旦',\n    'Uzbekistan': '乌兹别克斯坦',\n    'Australia': '澳大利亚',\n    'New Zealand': '新西兰',\n    'France': '法国',\n    'Germany': '德国',\n    'Sweden': '瑞典',\n    'Denmark': '丹麦',\n    'Poland': '波兰',\n    'Spain': '西班牙',\n    'Italy': '意大利',\n    'Finland': '芬兰',\n    'Norway': '挪威',\n    'Latvia': '拉脱维亚',\n    'Estonia': '爱沙尼亚',\n    'Bosnia and Herzegovina': '波黑',\n    'Montenegro': '黑山',\n    'Serbia': '塞尔维亚',\n    'Bulgaria': '保加利亚',\n    'Czech Republic': '捷克',\n    'Switzerland': '瑞士',\n    'Netherlands': '荷兰',\n    'Slovakia': '斯洛伐克',\n    'Lithuania': '立陶宛',\n    'Romania': '罗马尼亚',\n    'United Kingdom': '英国',\n    'Ukraine': '乌克兰',\n    'Belgium': '比利时',\n    'Hungary': '匈牙利',\n    'Portugal': '葡萄牙',\n    'Kosovo': '科索沃',\n    'South Africa': '南非',\n    'Brazil': '巴西',\n    'Uruguay': '乌拉圭',\n    'Argentina': '阿根廷',\n    'Chile': '智利',\n    'Guatemala': '危地马拉',\n    'United States': '美国',\n    'Canada': '加拿大',\n    'Russia': '俄罗斯',\n    'Kazakhstan': '哈萨克斯坦',\n    'Belarus': '白俄罗斯'\n  };\n\n  // 新增函数：提取纯队伍名称（移除角色后缀）- 与 SinglePlayer 保持一致\n  const getTeamName = team => {\n    return team.replace(/\\s*\\((coach|benched)\\)$/i, '');\n  };\n  const getAge = birthYear => 2025 - birthYear;\n\n  // 比较函数 - 与 SinglePlayer 保持一致\n  const compareValues = (guessed, target) => {\n    if (guessed === target) return 'correct';\n    const diff = Math.abs(guessed - target);\n    if (diff <= 3) return 'close'; // 修改为 3 年内为接近\n    return guessed > target ? 'higher' : 'lower';\n  };\n  const compareMajors = (guessed, target) => {\n    if (guessed === target) return 'correct';\n    const diff = Math.abs(guessed - target);\n    if (diff <= 2) return 'close'; // 修改为 2 次以内为接近\n    return guessed > target ? 'higher' : 'lower';\n  };\n  const guessHistoryRef = useRef([]);\n  const playersRef = useRef({});\n\n  // 获取随机选手\n  const fetchRandomPlayer = () => {\n    fetch(`${API_BASE_URL}/api/random-player`).then(response => {\n      if (!response.ok) throw new Error('无法获取随机选手');\n      return response.json();\n    }).then(async data => {\n      const decryptedData = await decryptData(data.encryptedData);\n      setPlayer(decryptedData);\n      setGuess('');\n      setSuggestions([]);\n      setGuessHistory([]);\n      setRemainingGuesses(8);\n      setShowGameResult(false);\n    }).catch(error => console.error('获取随机选手失败:', error));\n  };\n  useEffect(() => {\n    fetch(`${API_BASE_URL}/api/players`).then(response => {\n      if (!response.ok) throw new Error('无法获取选手数据');\n      return response.json();\n    }).then(data => setPlayers(data)).catch(err => console.error('获取玩家数据失败:', err));\n    fetchRandomPlayer();\n  }, []);\n\n  // 统一的事件处理\n  useEffect(() => {\n    if (!socket) return;\n    console.log(\"Setting up socket event listeners\");\n    const handleGameStarting = ({\n      countdown\n    }) => {\n      console.log(`游戏即将开始，倒计时: ${countdown}秒`);\n      setStartCountdown(countdown);\n\n      // 创建倒计时定时器\n      let timeLeft = countdown;\n      const countdownTimer = setInterval(() => {\n        timeLeft -= 1;\n        if (timeLeft > 0) {\n          setStartCountdown(timeLeft);\n        } else {\n          clearInterval(countdownTimer);\n          setStartCountdown(null);\n        }\n      }, 1000);\n    };\n\n    // 处理玩家准备状态更新\n    const handlePlayersReadyStatus = ({\n      readyPlayers\n    }) => {\n      console.log('Players ready status updated:', readyPlayers);\n      // 不需要直接设置isReady，因为它是一个prop\n      // 只需要在控制台记录当前玩家的准备状态\n      console.log('Current player ready status:', readyPlayers.includes(socket.id));\n      // isReady状态由父组件管理，这里不需要设置\n    };\n    const handleRoundStart = data => {\n      console.log('Round started with player:', data);\n      const simplePlayer = {\n        country: data.country,\n        team: data.team,\n        role: data.role,\n        majapp: data.majapp,\n        hiddenName: data.hiddenName,\n        birth_year: data.birth_year\n      };\n\n      // 清空猜测历史并重置游戏状态\n      setGameState(prev => ({\n        ...prev,\n        currentPlayer: simplePlayer,\n        remainingGuesses: 8,\n        timeLeft: 60,\n        guess: '',\n        guessHistory: [] // 清空自己的猜测历史\n      }));\n\n      // 清空所有玩家的猜测历史\n      setPlayersGuesses({});\n\n      // 清理历史记录引用\n      guessHistoryRef.current = [];\n\n      // 关闭游戏结果弹窗\n      setShowGameResult(false);\n    };\n    const handleRoundEnd = ({\n      winner,\n      correctAnswer\n    }) => {\n      console.log('Round ended, correct answer:', correctAnswer);\n      setGameState(prev => ({\n        ...prev,\n        showAnswer: true,\n        currentPlayer: {\n          ...prev.currentPlayer,\n          hiddenName: correctAnswer\n        }\n      }));\n      setShowGameResult(true);\n    };\n    const handleGuessResult = ({\n      playerId,\n      guess,\n      result\n    }) => {\n      console.log('Guess result received:', playerId, guess, result);\n      if (!result) return;\n\n      // 创建一个标准格式的猜测记录\n      const guessRecord = {\n        name: guess,\n        ...result,\n        timestamp: Date.now()\n      };\n\n      // 如果是自己的猜测，添加到自己的历史记录中\n      if (playerId === socket.id) {\n        setGameState(prev => {\n          // 检查是否已经存在相同的猜测\n          const isDuplicate = prev.guessHistory.some(g => g.name === guess);\n          if (isDuplicate) {\n            return prev; // 如果是重复的猜测，不更新状态\n          }\n          return {\n            ...prev,\n            guessHistory: [...(prev.guessHistory || []), guessRecord],\n            remainingGuesses: prev.remainingGuesses - 1 // 减少剩余猜测次数\n          };\n        });\n\n        // 同时更新引用，确保其他地方也能访问到最新的历史记录\n        if (!guessHistoryRef.current.some(g => g.name === guess)) {\n          guessHistoryRef.current = [...guessHistoryRef.current, guessRecord];\n        }\n      }\n\n      // 无论是谁的猜测，都添加到玩家猜测记录中，但要检查是否重复\n      setPlayersGuesses(prev => {\n        const newGuesses = {\n          ...prev\n        };\n        if (!newGuesses[playerId]) {\n          newGuesses[playerId] = [];\n        }\n\n        // 检查是否已经存在相同的猜测\n        const isDuplicate = newGuesses[playerId].some(g => g.name === guess);\n        if (!isDuplicate) {\n          newGuesses[playerId].push(guessRecord);\n        }\n        return newGuesses;\n      });\n\n      // 更新进度条\n      if (playerId === socket.id) {\n        var _gameState$currentPla, _gameState$currentPla2;\n        const progressBar = document.querySelector('.progress-bar');\n        if (progressBar) {\n          progressBar.style.width = `${(gameState.remainingGuesses - 1) / 8 * 100}%`;\n        }\n\n        // 检查是否猜对或用完猜测次数\n        if (guess.toLowerCase() === ((_gameState$currentPla = gameState.currentPlayer) === null || _gameState$currentPla === void 0 ? void 0 : (_gameState$currentPla2 = _gameState$currentPla.hiddenName) === null || _gameState$currentPla2 === void 0 ? void 0 : _gameState$currentPla2.toLowerCase()) || gameState.remainingGuesses - 1 === 0) {\n          setShowGameResult(true);\n        }\n      }\n    };\n\n    // 不再需要单独处理游戏开始前的玩家猜测，因为现在所有猜测都通过guessResult事件处理\n\n    const handleChatMessage = message => {\n      // 只有当消息不是自己发送的时候才添加到消息列表\n      if (message.id !== socket.id) {\n        setMessages(prev => [...prev, message]);\n      }\n    };\n    const handleChatHistory = history => {\n      // 设置历史聊天记录\n      setMessages(history);\n    };\n\n    // 注册所有事件监听器\n    socket.on('gameStarting', handleGameStarting);\n    socket.on('roundStart', handleRoundStart);\n    socket.on('roundEnd', handleRoundEnd);\n    socket.on('guessResult', handleGuessResult);\n    socket.on('chatMessage', handleChatMessage);\n    socket.on('chatHistory', handleChatHistory);\n    socket.on('playersReadyStatus', handlePlayersReadyStatus);\n\n    // 清理函数\n    return () => {\n      socket.off('gameStarting', handleGameStarting);\n      socket.off('roundStart', handleRoundStart);\n      socket.off('roundEnd', handleRoundEnd);\n      socket.off('guessResult', handleGuessResult);\n      socket.off('chatMessage', handleChatMessage);\n      socket.off('chatHistory', handleChatHistory);\n      socket.off('playersReadyStatus', handlePlayersReadyStatus);\n    };\n  }, [socket]);\n\n  // 添加倒计时定时器\n  useEffect(() => {\n    let timer;\n    if (gameState.timeLeft > 0 && gameState.currentPlayer) {\n      console.log(`Countdown: ${gameState.timeLeft} seconds left`);\n      timer = setInterval(() => {\n        setGameState(prev => ({\n          ...prev,\n          timeLeft: prev.timeLeft - 1\n        }));\n      }, 1000);\n    } else if (gameState.timeLeft === 0 && gameState.currentPlayer) {\n      // 时间到，显示结果\n      console.log('Time is up, showing result');\n      setShowGameResult(true);\n    }\n    return () => {\n      if (timer) clearInterval(timer);\n    };\n  }, [gameState.timeLeft, gameState.currentPlayer]);\n\n  // 确保当currentPlayer更新时重置倒计时\n  useEffect(() => {\n    if (gameState.currentPlayer) {\n      console.log('Current player updated, resetting timer');\n      setGameState(prev => ({\n        ...prev,\n        timeLeft: 60,\n        remainingGuesses: 8\n      }));\n    }\n  }, [gameState.currentPlayer]);\n  const handleInputChange = e => {\n    const value = e.target.value;\n    setGameState(prev => ({\n      ...prev,\n      guess: value\n    }));\n    if (!value.trim()) {\n      setSuggestions([]);\n      return;\n    }\n\n    // 使用encodeURIComponent确保查询参数正确编码\n    fetch(`${API_BASE_URL}/api/search-players?query=${encodeURIComponent(value)}`).then(response => response.json()).then(data => {\n      setSuggestions(data);\n      // 确保建议列表可见\n      const suggestionsElement = document.querySelector('.suggestions-list');\n      if (suggestionsElement) {\n        suggestionsElement.style.display = 'block';\n      }\n    }).catch(error => console.error('搜索选手失败:', error));\n  };\n\n  // 改进的键盘事件处理，增加跨平台兼容性\n  const handleKeyDown = e => {\n    if (suggestions.length === 0) return;\n\n    // 获取键值，兼容不同浏览器和平台\n    const key = e.key || e.keyCode;\n\n    // 使用键值或键码进行判断\n    if (key === 'ArrowDown' || key === 40) {\n      e.preventDefault();\n      const nextIndex = selectedIndex < suggestions.length - 1 ? selectedIndex + 1 : selectedIndex;\n      setSelectedIndex(nextIndex);\n      if (nextIndex >= 0) {\n        setGameState(prev => ({\n          ...prev,\n          guess: suggestions[nextIndex].name\n        }));\n      }\n    } else if (key === 'ArrowUp' || key === 38) {\n      e.preventDefault();\n      const prevIndex = selectedIndex > 0 ? selectedIndex - 1 : 0;\n      setSelectedIndex(prevIndex);\n      if (prevIndex >= 0) {\n        setGameState(prev => ({\n          ...prev,\n          guess: suggestions[prevIndex].name\n        }));\n      }\n    } else if (key === 'Enter' || key === 13) {\n      e.preventDefault();\n      if (selectedIndex >= 0) {\n        submitGuessWithName(suggestions[selectedIndex].name);\n        setSuggestions([]);\n        setSelectedIndex(-1);\n      } else if (gameState.guess.trim()) {\n        handleGuess();\n      }\n    }\n  };\n\n  // 添加一个新的函数来处理直接用名字提交 - 仿照 SinglePlayer\n  const submitGuessWithName = playerName => {\n    if (!gameState.currentPlayer || gameState.remainingGuesses <= 0) return;\n    let guessedPlayer = players[playerName];\n    if (!guessedPlayer) {\n      const matchedEntry = Object.entries(players).find(([name]) => name.toLowerCase() === playerName.toLowerCase());\n      if (matchedEntry) {\n        guessedPlayer = matchedEntry[1];\n      }\n    }\n    if (!guessedPlayer) {\n      setGameState(prev => ({\n        ...prev,\n        guess: ''\n      }));\n      return;\n    }\n\n    // 发送猜测数据到服务器\n    const guessData = {\n      roomId,\n      guess: playerName,\n      playerData: {\n        name: playerName,\n        team: guessedPlayer.team,\n        country: guessedPlayer.country,\n        role: guessedPlayer.role,\n        majapp: guessedPlayer.majapp,\n        birth_year: guessedPlayer.birth_year\n      }\n    };\n    socket.emit('submitGuess', guessData);\n\n    // 清空输入框并关闭建议列表\n    setGameState(prev => ({\n      ...prev,\n      guess: ''\n    }));\n    setSuggestions([]);\n  };\n\n  // 提交猜测 - 仿照 SinglePlayer\n  const handleGuess = () => {\n    if (!gameState.currentPlayer || gameState.remainingGuesses <= 0 || !gameState.guess.trim()) return;\n\n    // 先尝试完全匹配\n    let guessedPlayer = players[gameState.guess];\n\n    // 如果完全匹配未找到，再尝试不区分大小写的匹配\n    if (!guessedPlayer) {\n      const matchedEntry = Object.entries(players).find(([name]) => name.toLowerCase() === gameState.guess.toLowerCase());\n      if (matchedEntry) {\n        setGameState(prev => ({\n          ...prev,\n          guess: matchedEntry[0]\n        })); // 设置为正确的大小写形式\n        guessedPlayer = matchedEntry[1];\n      }\n    }\n    if (!guessedPlayer) {\n      setGameState(prev => ({\n        ...prev,\n        guess: ''\n      }));\n      return;\n    }\n\n    // 发送猜测数据到服务器\n    const guessData = {\n      roomId,\n      guess: gameState.guess,\n      playerData: {\n        name: gameState.guess,\n        team: guessedPlayer.team,\n        country: guessedPlayer.country,\n        role: guessedPlayer.role,\n        majapp: guessedPlayer.majapp,\n        birth_year: guessedPlayer.birth_year\n      }\n    };\n    socket.emit('submitGuess', guessData);\n\n    // 清空输入框并关闭建议列表\n    setGameState(prev => ({\n      ...prev,\n      guess: ''\n    }));\n    setSuggestions([]);\n  };\n  const sendMessage = () => {\n    if (!newMessage.trim() || !socket) return;\n    const message = {\n      id: socket.id,\n      content: newMessage,\n      timestamp: Date.now()\n    };\n\n    // 先添加到本地消息列表，确保立即显示\n    setMessages(prev => [...prev, message]);\n\n    // 然后发送到服务器\n    socket.emit('chatMessage', {\n      roomId,\n      ...message\n    });\n    setNewMessage('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-room\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-room-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-main\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"\\u623F\\u95F4 #\", roomId]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 545,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"game-status\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"scores-display\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"\\u4F60\\u7684\\u5F97\\u5206: \", scores && socket && scores[socket.id] || 0]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 548,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"\\u5BF9\\u624B\\u5F97\\u5206: \", scores && socket ? Object.entries(scores).filter(([id]) => id !== socket.id).reduce((total, [_, score]) => total + score, 0) : 0]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 549,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 547,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"\\u5269\\u4F59\\u65F6\\u95F4: \", gameState.timeLeft, \"\\u79D2\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 557,\n              columnNumber: 29\n            }, this), startCountdown !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"game-starting-countdown\",\n              children: [\"\\u6E38\\u620F\\u5373\\u5C06\\u5F00\\u59CB: \", startCountdown, \"\\u79D2\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 559,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 546,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 21\n        }, this), gameState.currentPlayer && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: gameState.guess,\n            onChange: handleInputChange,\n            onKeyDown: handleKeyDown,\n            placeholder: \"\\u8F93\\u5165\\u9009\\u624B\\u540D\\u5B57\",\n            disabled: gameState.remainingGuesses <= 0,\n            className: \"player-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 569,\n            columnNumber: 29\n          }, this), suggestions.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"suggestions-list\",\n            children: suggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `suggestion-item ${index === selectedIndex ? 'selected' : ''}`,\n              onClick: () => {\n                setGameState(prev => ({\n                  ...prev,\n                  guess: suggestion.name\n                }));\n                setSuggestions([]);\n                setSelectedIndex(-1);\n              },\n              children: suggestion.name\n            }, suggestion.name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 581,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 579,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 568,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-group\",\n          children: gameState.currentPlayer ? /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"submit-guess\",\n            onClick: handleGuess,\n            disabled: gameState.remainingGuesses <= 0,\n            children: \"\\u63D0\\u4EA4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 600,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `ready-button ${isReady ? 'ready' : ''}`,\n            onClick: onReady,\n            disabled: isReady,\n            children: isReady ? '已准备' : '准备'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 608,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 598,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-bar\",\n            style: {\n              width: `${gameState.remainingGuesses / 8 * 100}%`\n            },\n            children: gameState.remainingGuesses\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 619,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 618,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"guess-histories\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"\\u4F60\\u7684\\u731C\\u6D4B\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 630,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(GuessHistory, {\n              history: gameState.guessHistory || [],\n              player: gameState.currentPlayer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 631,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 629,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"\\u5BF9\\u624B\\u7684\\u731C\\u6D4B\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 634,\n              columnNumber: 29\n            }, this), Object.entries(playersGuesses).map(([playerId, guesses]) => playerId !== socket.id && /*#__PURE__*/_jsxDEV(GuessHistory, {\n              history: guesses,\n              player: gameState.currentPlayer\n            }, playerId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 637,\n              columnNumber: 37\n            }, this)), Object.keys(playersGuesses).filter(id => id !== socket.id).length === 0 && /*#__PURE__*/_jsxDEV(GuessHistory, {\n              history: [],\n              player: gameState.currentPlayer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 642,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 633,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 628,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 543,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `chat-section ${isChatExpanded ? 'expanded' : 'collapsed'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-header\",\n          onClick: () => setIsChatExpanded(!isChatExpanded),\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\u804A\\u5929\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 650,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"toggle-button\",\n            children: isChatExpanded ? '↓' : '↑'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 651,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 649,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messages-container\",\n          children: messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message ${msg.id === socket.id ? 'self' : ''}`,\n            \"data-is-guess\": msg.isGuess ? \"true\" : \"false\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"message-time\",\n              children: new Date(msg.timestamp).toLocaleTimeString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 662,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"message-content\",\n              children: msg.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 665,\n              columnNumber: 33\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 657,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 655,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newMessage,\n            onChange: e => setNewMessage(e.target.value),\n            onKeyDown: e => {\n              // 使用onKeyDown代替onKeyPress，并支持键码\n              const key = e.key || e.keyCode;\n              if (key === 'Enter' || key === 13) {\n                sendMessage();\n              }\n            },\n            placeholder: \"\\u53D1\\u9001\\u6D88\\u606F...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 670,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: sendMessage,\n            children: \"\\u53D1\\u9001\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 683,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 669,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 648,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 541,\n      columnNumber: 13\n    }, this), showGameResult && gameState.currentPlayer && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-result-modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-result-title\",\n        children: gameState.guessHistory.some(g => g.name.toLowerCase() === gameState.currentPlayer.hiddenName.toLowerCase()) ? '恭喜猜对了！' : '游戏结束'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 691,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-result-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player-info-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"player-info-label\",\n            children: \"\\u9009\\u624B\\u540D\\u5B57:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 698,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"player-info-value\",\n            children: gameState.currentPlayer.hiddenName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 699,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 697,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player-info-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"player-info-label\",\n            children: \"\\u6240\\u5C5E\\u6218\\u961F:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 702,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"player-info-value\",\n            children: gameState.currentPlayer.team\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 703,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 701,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player-info-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"player-info-label\",\n            children: \"\\u56FD\\u5BB6\\u53CA\\u5730\\u533A:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 706,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"player-info-value\",\n            children: countryTranslations[gameState.currentPlayer.country] || gameState.currentPlayer.country\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 707,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 705,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player-info-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"player-info-label\",\n            children: \"\\u51FA\\u751F\\u5E74\\u4EFD:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 712,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"player-info-value\",\n            children: gameState.currentPlayer.birth_year\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 713,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 711,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player-info-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"player-info-label\",\n            children: \"\\u6E38\\u620F\\u89D2\\u8272:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 716,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"player-info-value\",\n            children: gameState.currentPlayer.role\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 717,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 715,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player-info-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"player-info-label\",\n            children: \"Major\\u6B21\\u6570:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 720,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"player-info-value\",\n            children: gameState.currentPlayer.majapp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 721,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 719,\n          columnNumber: 25\n        }, this), ((_players$gameState$cu = players[gameState.currentPlayer.hiddenName]) === null || _players$gameState$cu === void 0 ? void 0 : _players$gameState$cu.link) && /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"game-result-link\",\n          href: (_players$gameState$cu2 = players[gameState.currentPlayer.hiddenName]) === null || _players$gameState$cu2 === void 0 ? void 0 : _players$gameState$cu2.link,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: \"\\u67E5\\u770B\\u9009\\u624B\\u8D44\\u6599 \\u2192\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 724,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 696,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-result-buttons\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button-continue\",\n          onClick: () => setShowGameResult(false),\n          children: \"\\u7EE7\\u7EED\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 735,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 734,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 690,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 540,\n    columnNumber: 9\n  }, this);\n}\n_s(GameRoom, \"lDSJsf+zI3lKXO8HGCgnujRJHFk=\");\n_c = GameRoom;\nexport default _c2 = /*#__PURE__*/React.memo(GameRoom); // 使用 memo 优化渲染\nvar _c, _c2;\n$RefreshReg$(_c, \"GameRoom\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","API_BASE_URL","GuessHistory","jsxDEV","_jsxDEV","decryptData","encryptedData","response","fetch","method","headers","body","JSON","stringify","json","GameRoom","roomId","socket","scores","currentRound","maxRounds","isReady","onReady","onReturnToLobby","_s","_players$gameState$cu","_players$gameState$cu2","gameState","setGameState","currentPlayer","timeLeft","guess","remainingGuesses","guessHistory","playersGuesses","setPlayersGuesses","messages","setMessages","suggestions","setSuggestions","selectedIndex","setSelectedIndex","newMessage","setNewMessage","showGameResult","setShowGameResult","players","setPlayers","isChatExpanded","setIsChatExpanded","startCountdown","setStartCountdown","regionMapping","Asia","Oceania","Europe","Africa","SouthAmerica","NorthAmerica","CIS","getRegion","country","region","countries","Object","entries","includes","countryTranslations","getTeamName","team","replace","getAge","birthYear","compareValues","guessed","target","diff","Math","abs","compareMajors","guessHistoryRef","playersRef","fetchRandomPlayer","then","ok","Error","data","decryptedData","setPlayer","setGuess","setGuessHistory","setRemainingGuesses","catch","error","console","err","log","handleGameStarting","countdown","countdownTimer","setInterval","clearInterval","handlePlayersReadyStatus","readyPlayers","id","handleRoundStart","simplePlayer","role","majapp","hiddenName","birth_year","prev","current","handleRoundEnd","winner","correctAnswer","showAnswer","handleGuessResult","playerId","result","guessRecord","name","timestamp","Date","now","isDuplicate","some","g","newGuesses","push","_gameState$currentPla","_gameState$currentPla2","progressBar","document","querySelector","style","width","toLowerCase","handleChatMessage","message","handleChatHistory","history","on","off","timer","handleInputChange","e","value","trim","encodeURIComponent","suggestionsElement","display","handleKeyDown","length","key","keyCode","preventDefault","nextIndex","prevIndex","submitGuessWithName","handleGuess","playerName","guessedPlayer","matchedEntry","find","guessData","playerData","emit","sendMessage","content","className","children","fileName","_jsxFileName","lineNumber","columnNumber","filter","reduce","total","_","score","type","onChange","onKeyDown","placeholder","disabled","map","suggestion","index","onClick","player","guesses","keys","msg","idx","isGuess","toLocaleTimeString","link","href","rel","_c","_c2","memo","$RefreshReg$"],"sources":["/Users/thecold/Desktop/courses/2025 Spring/Software Engneering/Final Project/blast/frontend/src/components/GameRoom.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport './GameRoom.css';\nimport { API_BASE_URL } from '../config';\nimport GuessHistory from './GuessHistory';\n\nconst decryptData = async (encryptedData) => {\n    const response = await fetch(`${API_BASE_URL}/api/decrypt`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ encryptedData }),\n    });\n    return await response.json();\n};\n\nfunction GameRoom({ roomId, socket, scores, currentRound, maxRounds, isReady, onReady, onReturnToLobby }) {\n    const [gameState, setGameState] = useState({\n        currentPlayer: null,\n        timeLeft: 60,\n        guess: '',\n        remainingGuesses: 8,\n        guessHistory: [], \n    });\n    \n    const [playersGuesses, setPlayersGuesses] = useState({}); \n    const [messages, setMessages] = useState([]);\n\n    const [suggestions, setSuggestions] = useState([]);\n    const [selectedIndex, setSelectedIndex] = useState(-1);\n    const [newMessage, setNewMessage] = useState('');\n    const [showGameResult, setShowGameResult] = useState(false);\n    const [players, setPlayers] = useState({});\n    const [isChatExpanded, setIsChatExpanded] = useState(true);\n    const [startCountdown, setStartCountdown] = useState(null);\n\n    // 区域映射 - 与 SinglePlayer 保持一致\n    const regionMapping = {\n        Asia: ['China', 'Mongolia', 'Indonesia', 'Malaysia', 'Turkey', 'India', 'Israel', 'Jordan', 'Uzbekistan'],\n        Oceania: ['Australia', 'New Zealand'],\n        Europe: ['France', 'Germany', 'Sweden', 'Denmark', 'Poland', 'Spain', 'Italy', \n                'Finland', 'Norway', 'Latvia', 'Estonia', 'Bosnia and Herzegovina', \n                'Montenegro', 'Serbia', 'Bulgaria', 'Czech Republic', 'Switzerland', \n                'Netherlands', 'Slovakia', 'Lithuania', 'Romania', 'United Kingdom', \n                'Ukraine', 'Belgium', 'Hungary', 'Portugal', 'Kosovo'],\n        Africa: ['South Africa'],\n        SouthAmerica: ['Brazil', 'Uruguay', 'Argentina', 'Chile', 'Guatemala'],\n        NorthAmerica: ['United States', 'Canada'],\n        CIS: ['Russia', 'Kazakhstan', 'Belarus']\n    };\n\n    const getRegion = (country) => {\n        for (const [region, countries] of Object.entries(regionMapping)) {\n            if (countries.includes(country)) {\n                return region;\n            }\n        }\n        return 'Other';\n    };\n\n    // 添加国家中英文映射 - 与 SinglePlayer 保持一致\n    const countryTranslations = {\n        'China': '中国',\n        'Mongolia': '蒙古',\n        'Indonesia': '印度尼西亚',\n        'Malaysia': '马来西亚',\n        'Turkey': '土耳其',\n        'India': '印度',\n        'Israel': '以色列',\n        'Jordan': '约旦',\n        'Uzbekistan': '乌兹别克斯坦',\n        'Australia': '澳大利亚',\n        'New Zealand': '新西兰',\n        'France': '法国',\n        'Germany': '德国',\n        'Sweden': '瑞典',\n        'Denmark': '丹麦',\n        'Poland': '波兰',\n        'Spain': '西班牙',\n        'Italy': '意大利',\n        'Finland': '芬兰',\n        'Norway': '挪威',\n        'Latvia': '拉脱维亚',\n        'Estonia': '爱沙尼亚',\n        'Bosnia and Herzegovina': '波黑',\n        'Montenegro': '黑山',\n        'Serbia': '塞尔维亚',\n        'Bulgaria': '保加利亚',\n        'Czech Republic': '捷克',\n        'Switzerland': '瑞士',\n        'Netherlands': '荷兰',\n        'Slovakia': '斯洛伐克',\n        'Lithuania': '立陶宛',\n        'Romania': '罗马尼亚',\n        'United Kingdom': '英国',\n        'Ukraine': '乌克兰',\n        'Belgium': '比利时',\n        'Hungary': '匈牙利',\n        'Portugal': '葡萄牙',\n        'Kosovo': '科索沃',\n        'South Africa': '南非',\n        'Brazil': '巴西',\n        'Uruguay': '乌拉圭',\n        'Argentina': '阿根廷',\n        'Chile': '智利',\n        'Guatemala': '危地马拉',\n        'United States': '美国',\n        'Canada': '加拿大',\n        'Russia': '俄罗斯',\n        'Kazakhstan': '哈萨克斯坦',\n        'Belarus': '白俄罗斯'\n    };\n\n    // 新增函数：提取纯队伍名称（移除角色后缀）- 与 SinglePlayer 保持一致\n    const getTeamName = (team) => {\n        return team.replace(/\\s*\\((coach|benched)\\)$/i, '');\n    };\n\n    const getAge = (birthYear) => 2025 - birthYear;\n\n    // 比较函数 - 与 SinglePlayer 保持一致\n    const compareValues = (guessed, target) => {\n        if (guessed === target) return 'correct';\n        const diff = Math.abs(guessed - target);\n        if (diff <= 3) return 'close'; // 修改为 3 年内为接近\n        return guessed > target ? 'higher' : 'lower';\n    };\n\n    const compareMajors = (guessed, target) => {\n        if (guessed === target) return 'correct';\n        const diff = Math.abs(guessed - target);\n        if (diff <= 2) return 'close'; // 修改为 2 次以内为接近\n        return guessed > target ? 'higher' : 'lower';\n    };\n\n    const guessHistoryRef = useRef([]);\n    const playersRef = useRef({});\n\n    // 获取随机选手\n    const fetchRandomPlayer = () => {\n        fetch(`${API_BASE_URL}/api/random-player`)\n            .then(response => {\n                if (!response.ok) throw new Error('无法获取随机选手');\n                return response.json();\n            })\n            .then(async data => {\n                const decryptedData = await decryptData(data.encryptedData);\n                setPlayer(decryptedData);\n                setGuess('');\n                setSuggestions([]);\n                setGuessHistory([]);\n                setRemainingGuesses(8);\n                setShowGameResult(false);\n            })\n            .catch(error => console.error('获取随机选手失败:', error));\n    };\n\n    useEffect(() => {\n        fetch(`${API_BASE_URL}/api/players`)\n            .then(response => {\n                if (!response.ok) throw new Error('无法获取选手数据');\n                return response.json();\n            })\n            .then(data => setPlayers(data))\n            .catch(err => console.error('获取玩家数据失败:', err));\n\n        fetchRandomPlayer();\n    }, []);\n\n    // 统一的事件处理\n    useEffect(() => {\n        if (!socket) return;\n\n        console.log(\"Setting up socket event listeners\");\n\n        const handleGameStarting = ({ countdown }) => {\n            console.log(`游戏即将开始，倒计时: ${countdown}秒`);\n            setStartCountdown(countdown);\n            \n            // 创建倒计时定时器\n            let timeLeft = countdown;\n            const countdownTimer = setInterval(() => {\n                timeLeft -= 1;\n                if (timeLeft > 0) {\n                    setStartCountdown(timeLeft);\n                } else {\n                    clearInterval(countdownTimer);\n                    setStartCountdown(null);\n                }\n            }, 1000);\n        };\n\n        // 处理玩家准备状态更新\n        const handlePlayersReadyStatus = ({ readyPlayers }) => {\n            console.log('Players ready status updated:', readyPlayers);\n            // 不需要直接设置isReady，因为它是一个prop\n            // 只需要在控制台记录当前玩家的准备状态\n            console.log('Current player ready status:', readyPlayers.includes(socket.id));\n            // isReady状态由父组件管理，这里不需要设置\n        };\n\n        const handleRoundStart = (data) => {\n            console.log('Round started with player:', data);\n            const simplePlayer = {\n                country: data.country,\n                team: data.team,\n                role: data.role,\n                majapp: data.majapp,\n                hiddenName: data.hiddenName,\n                birth_year: data.birth_year\n            };\n            \n            // 清空猜测历史并重置游戏状态\n            setGameState(prev => ({\n                ...prev,\n                currentPlayer: simplePlayer,\n                remainingGuesses: 8,\n                timeLeft: 60,\n                guess: '',\n                guessHistory: [] // 清空自己的猜测历史\n            }));\n            \n            // 清空所有玩家的猜测历史\n            setPlayersGuesses({});\n            \n            // 清理历史记录引用\n            guessHistoryRef.current = [];\n            \n            // 关闭游戏结果弹窗\n            setShowGameResult(false);\n        };\n\n        const handleRoundEnd = ({ winner, correctAnswer }) => {\n            console.log('Round ended, correct answer:', correctAnswer);\n            setGameState(prev => ({\n                ...prev,\n                showAnswer: true,\n                currentPlayer: { ...prev.currentPlayer, hiddenName: correctAnswer }\n            }));\n            setShowGameResult(true);\n        };\n\n        const handleGuessResult = ({ playerId, guess, result }) => {\n            console.log('Guess result received:', playerId, guess, result);\n            if (!result) return;\n            \n            // 创建一个标准格式的猜测记录\n            const guessRecord = {\n                name: guess,\n                ...result,\n                timestamp: Date.now()\n            };\n            \n            // 如果是自己的猜测，添加到自己的历史记录中\n            if (playerId === socket.id) {\n                setGameState(prev => {\n                    // 检查是否已经存在相同的猜测\n                    const isDuplicate = prev.guessHistory.some(g => g.name === guess);\n                    if (isDuplicate) {\n                        return prev; // 如果是重复的猜测，不更新状态\n                    }\n                    return {\n                        ...prev,\n                        guessHistory: [...(prev.guessHistory || []), guessRecord],\n                        remainingGuesses: prev.remainingGuesses - 1 // 减少剩余猜测次数\n                    };\n                });\n                \n                // 同时更新引用，确保其他地方也能访问到最新的历史记录\n                if (!guessHistoryRef.current.some(g => g.name === guess)) {\n                    guessHistoryRef.current = [...guessHistoryRef.current, guessRecord];\n                }\n            }\n            \n            // 无论是谁的猜测，都添加到玩家猜测记录中，但要检查是否重复\n            setPlayersGuesses(prev => {\n                const newGuesses = { ...prev };\n                if (!newGuesses[playerId]) {\n                    newGuesses[playerId] = [];\n                }\n                \n                // 检查是否已经存在相同的猜测\n                const isDuplicate = newGuesses[playerId].some(g => g.name === guess);\n                if (!isDuplicate) {\n                    newGuesses[playerId].push(guessRecord);\n                }\n                \n                return newGuesses;\n            });\n            \n            // 更新进度条\n            if (playerId === socket.id) {\n                const progressBar = document.querySelector('.progress-bar');\n                if (progressBar) {\n                    progressBar.style.width = `${((gameState.remainingGuesses - 1) / 8) * 100}%`;\n                }\n                \n                // 检查是否猜对或用完猜测次数\n                if (guess.toLowerCase() === gameState.currentPlayer?.hiddenName?.toLowerCase() || gameState.remainingGuesses - 1 === 0) {\n                    setShowGameResult(true);\n                }\n            }\n        };\n\n        // 不再需要单独处理游戏开始前的玩家猜测，因为现在所有猜测都通过guessResult事件处理\n\n        const handleChatMessage = (message) => {\n            // 只有当消息不是自己发送的时候才添加到消息列表\n            if (message.id !== socket.id) {\n                setMessages(prev => [...prev, message]);\n            }\n        };\n\n        const handleChatHistory = (history) => {\n            // 设置历史聊天记录\n            setMessages(history);\n        };\n\n        // 注册所有事件监听器\n        socket.on('gameStarting', handleGameStarting);\n        socket.on('roundStart', handleRoundStart);\n        socket.on('roundEnd', handleRoundEnd);\n        socket.on('guessResult', handleGuessResult);\n        socket.on('chatMessage', handleChatMessage);\n        socket.on('chatHistory', handleChatHistory);\n        socket.on('playersReadyStatus', handlePlayersReadyStatus);\n\n        // 清理函数\n        return () => {\n            socket.off('gameStarting', handleGameStarting);\n            socket.off('roundStart', handleRoundStart);\n            socket.off('roundEnd', handleRoundEnd);\n            socket.off('guessResult', handleGuessResult);\n            socket.off('chatMessage', handleChatMessage);\n            socket.off('chatHistory', handleChatHistory);\n            socket.off('playersReadyStatus', handlePlayersReadyStatus);\n        };\n    }, [socket]);\n\n    // 添加倒计时定时器\n    useEffect(() => {\n        let timer;\n        if (gameState.timeLeft > 0 && gameState.currentPlayer) {\n            console.log(`Countdown: ${gameState.timeLeft} seconds left`);\n            timer = setInterval(() => {\n                setGameState(prev => ({\n                    ...prev,\n                    timeLeft: prev.timeLeft - 1\n                }));\n            }, 1000);\n        } else if (gameState.timeLeft === 0 && gameState.currentPlayer) {\n            // 时间到，显示结果\n            console.log('Time is up, showing result');\n            setShowGameResult(true);\n        }\n\n        return () => {\n            if (timer) clearInterval(timer);\n        };\n    }, [gameState.timeLeft, gameState.currentPlayer]);\n\n    // 确保当currentPlayer更新时重置倒计时\n    useEffect(() => {\n        if (gameState.currentPlayer) {\n            console.log('Current player updated, resetting timer');\n            setGameState(prev => ({\n                ...prev,\n                timeLeft: 60,\n                remainingGuesses: 8\n            }));\n        }\n    }, [gameState.currentPlayer]);\n\n    const handleInputChange = (e) => {\n        const value = e.target.value;\n        setGameState((prev) => ({ ...prev, guess: value }));\n        \n        if (!value.trim()) {\n            setSuggestions([]);\n            return;\n        }\n\n        // 使用encodeURIComponent确保查询参数正确编码\n        fetch(`${API_BASE_URL}/api/search-players?query=${encodeURIComponent(value)}`)\n            .then((response) => response.json())\n            .then((data) => {\n                setSuggestions(data);\n                // 确保建议列表可见\n                const suggestionsElement = document.querySelector('.suggestions-list');\n                if (suggestionsElement) {\n                    suggestionsElement.style.display = 'block';\n                }\n            })\n            .catch((error) => console.error('搜索选手失败:', error));\n    };\n\n    // 改进的键盘事件处理，增加跨平台兼容性\n    const handleKeyDown = (e) => {\n        if (suggestions.length === 0) return;\n\n        // 获取键值，兼容不同浏览器和平台\n        const key = e.key || e.keyCode;\n        \n        // 使用键值或键码进行判断\n        if (key === 'ArrowDown' || key === 40) {\n            e.preventDefault();\n            const nextIndex = selectedIndex < suggestions.length - 1 ? selectedIndex + 1 : selectedIndex;\n            setSelectedIndex(nextIndex);\n            if (nextIndex >= 0) {\n                setGameState(prev => ({ ...prev, guess: suggestions[nextIndex].name }));\n            }\n        } \n        else if (key === 'ArrowUp' || key === 38) {\n            e.preventDefault();\n            const prevIndex = selectedIndex > 0 ? selectedIndex - 1 : 0;\n            setSelectedIndex(prevIndex);\n            if (prevIndex >= 0) {\n                setGameState(prev => ({ ...prev, guess: suggestions[prevIndex].name }));\n            }\n        } \n        else if (key === 'Enter' || key === 13) {\n            e.preventDefault();\n            if (selectedIndex >= 0) {\n                submitGuessWithName(suggestions[selectedIndex].name);\n                setSuggestions([]);\n                setSelectedIndex(-1);\n            } else if (gameState.guess.trim()) {\n                handleGuess();\n            }\n        }\n    };\n\n    // 添加一个新的函数来处理直接用名字提交 - 仿照 SinglePlayer\n    const submitGuessWithName = (playerName) => {\n        if (!gameState.currentPlayer || gameState.remainingGuesses <= 0) return;\n\n        let guessedPlayer = players[playerName];\n        \n        if (!guessedPlayer) {\n            const matchedEntry = Object.entries(players).find(\n                ([name]) => name.toLowerCase() === playerName.toLowerCase()\n            );\n            \n            if (matchedEntry) {\n                guessedPlayer = matchedEntry[1];\n            }\n        }\n\n        if (!guessedPlayer) {\n            setGameState(prev => ({ ...prev, guess: '' }));\n            return;\n        }\n\n        // 发送猜测数据到服务器\n        const guessData = {\n            roomId,\n            guess: playerName,\n            playerData: {\n                name: playerName,\n                team: guessedPlayer.team,\n                country: guessedPlayer.country,\n                role: guessedPlayer.role,\n                majapp: guessedPlayer.majapp,\n                birth_year: guessedPlayer.birth_year\n            }\n        };\n        socket.emit('submitGuess', guessData);\n\n        // 清空输入框并关闭建议列表\n        setGameState(prev => ({\n            ...prev,\n            guess: ''\n        }));\n        setSuggestions([]);\n    };\n\n    // 提交猜测 - 仿照 SinglePlayer\n    const handleGuess = () => {\n        if (!gameState.currentPlayer || gameState.remainingGuesses <= 0 || !gameState.guess.trim()) return;\n\n        // 先尝试完全匹配\n        let guessedPlayer = players[gameState.guess];\n        \n        // 如果完全匹配未找到，再尝试不区分大小写的匹配\n        if (!guessedPlayer) {\n            const matchedEntry = Object.entries(players).find(\n                ([name]) => name.toLowerCase() === gameState.guess.toLowerCase()\n            );\n            \n            if (matchedEntry) {\n                setGameState(prev => ({ ...prev, guess: matchedEntry[0] })); // 设置为正确的大小写形式\n                guessedPlayer = matchedEntry[1];\n            }\n        }\n\n        if (!guessedPlayer) {\n            setGameState(prev => ({ ...prev, guess: '' }));\n            return;\n        }\n\n        // 发送猜测数据到服务器\n        const guessData = {\n            roomId,\n            guess: gameState.guess,\n            playerData: {\n                name: gameState.guess,\n                team: guessedPlayer.team,\n                country: guessedPlayer.country,\n                role: guessedPlayer.role,\n                majapp: guessedPlayer.majapp,\n                birth_year: guessedPlayer.birth_year\n            }\n        };\n        socket.emit('submitGuess', guessData);\n\n        // 清空输入框并关闭建议列表\n        setGameState(prev => ({\n            ...prev,\n            guess: ''\n        }));\n        setSuggestions([]);\n    };\n\n    const sendMessage = () => {\n        if (!newMessage.trim() || !socket) return;\n\n        const message = {\n            id: socket.id,\n            content: newMessage,\n            timestamp: Date.now(),\n        };\n\n        // 先添加到本地消息列表，确保立即显示\n        setMessages(prev => [...prev, message]);\n        \n        // 然后发送到服务器\n        socket.emit('chatMessage', { roomId, ...message });\n        setNewMessage('');\n    };\n\n    return (\n        <div className=\"game-room\">\n            <div className=\"game-room-container\">\n                {/* 左侧游戏区域 */}\n                <div className=\"game-main\">\n                    <div className=\"game-header\">\n                        <h2>房间 #{roomId}</h2>\n                        <div className=\"game-status\">\n                            <div className=\"scores-display\">\n                                <span>你的得分: {(scores && socket && scores[socket.id]) || 0}</span>\n                                <span>对手得分: {\n                                    (scores && socket) ? \n                                    Object.entries(scores)\n                                        .filter(([id]) => id !== socket.id)\n                                        .reduce((total, [_, score]) => total + score, 0)\n                                    : 0\n                                }</span>\n                            </div>\n                            <span>剩余时间: {gameState.timeLeft}秒</span>\n                            {startCountdown !== null && (\n                                <div className=\"game-starting-countdown\">\n                                    游戏即将开始: {startCountdown}秒\n                                </div>\n                            )}\n                        </div>\n                    </div>\n\n                    {/* 游戏开始后才显示输入区域 */}\n                    {gameState.currentPlayer && (\n                        <div className=\"input-section\">\n                            <input\n                                type=\"text\"\n                                value={gameState.guess}\n                                onChange={handleInputChange}\n                                onKeyDown={handleKeyDown}\n                                placeholder=\"输入选手名字\"\n                                disabled={gameState.remainingGuesses <= 0}\n                                className=\"player-input\"\n                            />\n                            {suggestions.length > 0 && (\n                                <div className=\"suggestions-list\">\n                                    {suggestions.map((suggestion, index) => (\n                                        <div\n                                            key={suggestion.name}\n                                            className={`suggestion-item ${index === selectedIndex ? 'selected' : ''}`}\n                                            onClick={() => {\n                                                setGameState((prev) => ({ ...prev, guess: suggestion.name }));\n                                                setSuggestions([]);\n                                                setSelectedIndex(-1);\n                                            }}\n                                        >\n                                            {suggestion.name}\n                                        </div>\n                                    ))}\n                                </div>\n                            )}\n                        </div>\n                    )}\n\n                    <div className=\"button-group\">\n                        {gameState.currentPlayer ? (\n                            <button\n                                className=\"submit-guess\"\n                                onClick={handleGuess}\n                                disabled={gameState.remainingGuesses <= 0}\n                            >\n                                提交\n                            </button>\n                        ) : (\n                            <button\n                                className={`ready-button ${isReady ? 'ready' : ''}`}\n                                onClick={onReady}\n                                disabled={isReady}\n                            >\n                                {isReady ? '已准备' : '准备'}\n                            </button>\n                        )}\n                    </div>\n\n                    <div className=\"progress-container\">\n                        <div\n                            className=\"progress-bar\"\n                            style={{width: `${(gameState.remainingGuesses / 8) * 100}%`}}\n                        >\n                            {gameState.remainingGuesses}\n                        </div>\n                    </div>\n\n                    {/* 猜测历史区域 */}\n                    <div className=\"guess-histories\">\n                        <div>\n                            <h3>你的猜测</h3>\n                            <GuessHistory history={gameState.guessHistory || []} player={gameState.currentPlayer} />\n                        </div>\n                        <div>\n                            <h3>对手的猜测</h3>\n                            {Object.entries(playersGuesses).map(([playerId, guesses]) => (\n                                playerId !== socket.id && (\n                                    <GuessHistory key={playerId} history={guesses} player={gameState.currentPlayer} />\n                                )\n                            ))}\n                            {/* 如果没有对手的猜测，显示空表格 */}\n                            {Object.keys(playersGuesses).filter(id => id !== socket.id).length === 0 && (\n                                <GuessHistory history={[]} player={gameState.currentPlayer} />\n                            )}\n                        </div>\n                    </div>\n                </div>\n\n                <div className={`chat-section ${isChatExpanded ? 'expanded' : 'collapsed'}`}>\n                    <div className=\"chat-header\" onClick={() => setIsChatExpanded(!isChatExpanded)}>\n                        <h3>聊天</h3>\n                        <button className=\"toggle-button\">\n                            {isChatExpanded ? '↓' : '↑'}\n                        </button>\n                    </div>\n                    <div className=\"messages-container\">\n                        {messages.map((msg, idx) => (\n                            <div \n                                key={idx} \n                                className={`message ${msg.id === socket.id ? 'self' : ''}`}\n                                data-is-guess={msg.isGuess ? \"true\" : \"false\"}\n                            >\n                                <span className=\"message-time\">\n                                    {new Date(msg.timestamp).toLocaleTimeString()}\n                                </span>\n                                <span className=\"message-content\">{msg.content}</span>\n                            </div>\n                        ))}\n                    </div>\n                    <div className=\"message-input\">\n                        <input\n                            type=\"text\"\n                            value={newMessage}\n                            onChange={(e) => setNewMessage(e.target.value)}\n                            onKeyDown={(e) => {\n                                // 使用onKeyDown代替onKeyPress，并支持键码\n                                const key = e.key || e.keyCode;\n                                if (key === 'Enter' || key === 13) {\n                                    sendMessage();\n                                }\n                            }}\n                            placeholder=\"发送消息...\"\n                        />\n                        <button onClick={sendMessage}>发送</button>\n                    </div>\n                </div>\n            </div>\n\n            {/* 游戏结果弹窗 - 与 SinglePlayer 保持一致 */}\n            {showGameResult && gameState.currentPlayer && (\n                <div className=\"game-result-modal\">\n                    <div className=\"game-result-title\">\n                        {gameState.guessHistory.some(g => g.name.toLowerCase() === gameState.currentPlayer.hiddenName.toLowerCase()) \n                            ? '恭喜猜对了！' \n                            : '游戏结束'}\n                    </div>\n                    <div className=\"game-result-content\">\n                        <div className=\"player-info-item\">\n                            <span className=\"player-info-label\">选手名字:</span>\n                            <span className=\"player-info-value\">{gameState.currentPlayer.hiddenName}</span>\n                        </div>\n                        <div className=\"player-info-item\">\n                            <span className=\"player-info-label\">所属战队:</span>\n                            <span className=\"player-info-value\">{gameState.currentPlayer.team}</span>\n                        </div>\n                        <div className=\"player-info-item\">\n                            <span className=\"player-info-label\">国家及地区:</span>\n                            <span className=\"player-info-value\">\n                                {countryTranslations[gameState.currentPlayer.country] || gameState.currentPlayer.country}\n                            </span>\n                        </div>\n                        <div className=\"player-info-item\">\n                            <span className=\"player-info-label\">出生年份:</span>\n                            <span className=\"player-info-value\">{gameState.currentPlayer.birth_year}</span>\n                        </div>\n                        <div className=\"player-info-item\">\n                            <span className=\"player-info-label\">游戏角色:</span>\n                            <span className=\"player-info-value\">{gameState.currentPlayer.role}</span>\n                        </div>\n                        <div className=\"player-info-item\">\n                            <span className=\"player-info-label\">Major次数:</span>\n                            <span className=\"player-info-value\">{gameState.currentPlayer.majapp}</span>\n                        </div>\n                        {players[gameState.currentPlayer.hiddenName]?.link && (\n                            <a \n                                className=\"game-result-link\"\n                                href={players[gameState.currentPlayer.hiddenName]?.link}\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                            >\n                                查看选手资料 →\n                            </a>\n                        )}\n                    </div>\n                    <div className=\"game-result-buttons\">\n                        <button className=\"button-continue\" onClick={() => setShowGameResult(false)}>\n                            继续\n                        </button>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default React.memo(GameRoom); // 使用 memo 优化渲染\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}