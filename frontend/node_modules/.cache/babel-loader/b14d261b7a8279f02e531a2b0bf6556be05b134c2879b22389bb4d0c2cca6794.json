{"ast":null,"code":"var _jsxFileName = \"E:\\\\Code\\\\GuessPlayer\\\\Software-Engneering\\\\frontend\\\\src\\\\components\\\\MultiPlayer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { io } from 'socket.io-client';\nimport { API_BASE_URL } from '../config';\nimport GameRoom from './GameRoom';\nimport GameLobby from './GameLobby';\nimport './MultiPlayer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MultiPlayer() {\n  _s();\n  const socketRef = useRef(null);\n  const [rooms, setRooms] = useState([]); // 添加 rooms 状态\n  const [gameState, setGameState] = useState({\n    roomId: null,\n    currentRound: 0,\n    maxRounds: 3,\n    status: 'lobby',\n    isReady: false\n  });\n  useEffect(() => {\n    // 使用完整的配置选项\n    const socket = io(API_BASE_URL, {\n      transports: ['websocket', 'polling'],\n      reconnectionAttempts: 5,\n      reconnectionDelay: 1000,\n      autoConnect: true,\n      timeout: 10000\n    });\n    socketRef.current = socket;\n    const handlers = {\n      connect: () => {\n        console.log('Connected to server');\n        socket.emit('getRooms'); // 连接后请求房间列表\n      },\n      disconnect: reason => {\n        console.log('Disconnected:', reason);\n      },\n      connect_error: error => {\n        console.error('Connection error:', error);\n      },\n      roomsList: roomsList => {\n        console.log('Received rooms list:', roomsList);\n        setRooms(roomsList); // 处理房间列表更新\n      },\n      roomCreated: data => {\n        setGameState(prev => ({\n          ...prev,\n          roomId: data.roomCode,\n          status: 'room'\n        }));\n      },\n      error: console.error\n    };\n    Object.entries(handlers).forEach(([event, handler]) => {\n      socket.on(event, handler);\n    });\n    return () => {\n      if (socket) {\n        Object.keys(handlers).forEach(event => {\n          socket.off(event);\n        });\n        socket.disconnect();\n      }\n    };\n  }, []);\n  const handleCreateRoom = useCallback((settings = {}) => {\n    if (!socketRef.current) return;\n    const roomSettings = {\n      maxRounds: settings.maxRounds || 3\n    };\n    socketRef.current.emit('createRoom', roomSettings);\n  }, []);\n  const handleJoinRoom = roomId => {\n    if (socketRef.current) {\n      socketRef.current.emit('joinRoom', roomId);\n      setGameState(prev => ({\n        ...prev,\n        status: 'room'\n      }));\n    }\n  };\n  const handleSpectateRoom = roomId => {\n    if (socketRef.current) {\n      socketRef.current.emit('spectateRoom', roomId);\n      setGameState(prev => ({\n        ...prev,\n        status: 'spectate'\n      }));\n    }\n  };\n  const handlePlayerReady = () => {\n    if (socketRef.current && gameState.roomId) {\n      socketRef.current.emit('playerReady', {\n        roomId: gameState.roomId\n      });\n      setGameState(prev => ({\n        ...prev,\n        isReady: true\n      }));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"multiplayer-container\",\n    children: [gameState.status === 'lobby' && /*#__PURE__*/_jsxDEV(GameLobby, {\n      rooms: rooms,\n      maxRounds: gameState.maxRounds,\n      setMaxRounds: rounds => setGameState(prev => ({\n        ...prev,\n        maxRounds: rounds\n      })),\n      onCreateRoom: handleCreateRoom,\n      onJoinRoom: handleJoinRoom,\n      onSpectateRoom: handleSpectateRoom\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }, this), gameState.status === 'room' && /*#__PURE__*/_jsxDEV(GameRoom, {\n      socket: socketRef.current,\n      roomId: gameState.roomId,\n      currentRound: gameState.currentRound,\n      maxRounds: gameState.maxRounds,\n      scores: gameState.scores,\n      isReady: gameState.isReady,\n      onReady: handlePlayerReady\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }, this), gameState.status === 'spectate' && /*#__PURE__*/_jsxDEV(SpectatorView, {\n      roomId: gameState.roomId,\n      socket: socketRef.current\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 9\n  }, this);\n}\n\n// 防抖函数\n_s(MultiPlayer, \"kNeqVYwDS7QbUQBgaKktqtZdAuY=\");\n_c = MultiPlayer;\nfunction debounce(fn, delay) {\n  let timer = null;\n  return function (...args) {\n    if (timer) clearTimeout(timer);\n    timer = setTimeout(() => fn(...args), delay);\n  };\n}\nexport default MultiPlayer;\nvar _c;\n$RefreshReg$(_c, \"MultiPlayer\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","io","API_BASE_URL","GameRoom","GameLobby","jsxDEV","_jsxDEV","MultiPlayer","_s","socketRef","rooms","setRooms","gameState","setGameState","roomId","currentRound","maxRounds","status","isReady","socket","transports","reconnectionAttempts","reconnectionDelay","autoConnect","timeout","current","handlers","connect","console","log","emit","disconnect","reason","connect_error","error","roomsList","roomCreated","data","prev","roomCode","Object","entries","forEach","event","handler","on","keys","off","handleCreateRoom","settings","roomSettings","handleJoinRoom","handleSpectateRoom","handlePlayerReady","className","children","setMaxRounds","rounds","onCreateRoom","onJoinRoom","onSpectateRoom","fileName","_jsxFileName","lineNumber","columnNumber","scores","onReady","SpectatorView","_c","debounce","fn","delay","timer","args","clearTimeout","setTimeout","$RefreshReg$"],"sources":["E:/Code/GuessPlayer/Software-Engneering/frontend/src/components/MultiPlayer.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\r\nimport { io } from 'socket.io-client';\r\nimport { API_BASE_URL } from '../config';\r\nimport GameRoom from './GameRoom';\r\nimport GameLobby from './GameLobby';\r\nimport './MultiPlayer.css';\r\n\r\nfunction MultiPlayer() {\r\n    const socketRef = useRef(null);\r\n    const [rooms, setRooms] = useState([]); // 添加 rooms 状态\r\n    const [gameState, setGameState] = useState({\r\n        roomId: null,\r\n        currentRound: 0,\r\n        maxRounds: 3,\r\n        status: 'lobby',\r\n        isReady: false\r\n    });\r\n\r\n    useEffect(() => {\r\n        // 使用完整的配置选项\r\n        const socket = io(API_BASE_URL, {\r\n            transports: ['websocket', 'polling'],\r\n            reconnectionAttempts: 5,\r\n            reconnectionDelay: 1000,\r\n            autoConnect: true,\r\n            timeout: 10000,\r\n        });\r\n\r\n        socketRef.current = socket;\r\n\r\n        const handlers = {\r\n            connect: () => {\r\n                console.log('Connected to server');\r\n                socket.emit('getRooms'); // 连接后请求房间列表\r\n            },\r\n            disconnect: (reason) => {\r\n                console.log('Disconnected:', reason);\r\n            },\r\n            connect_error: (error) => {\r\n                console.error('Connection error:', error);\r\n            },\r\n            roomsList: (roomsList) => {\r\n                console.log('Received rooms list:', roomsList);\r\n                setRooms(roomsList); // 处理房间列表更新\r\n            },\r\n            roomCreated: (data) => {\r\n                setGameState(prev => ({\r\n                    ...prev,\r\n                    roomId: data.roomCode,\r\n                    status: 'room'\r\n                }));\r\n            },\r\n            error: console.error\r\n        };\r\n\r\n        Object.entries(handlers).forEach(([event, handler]) => {\r\n            socket.on(event, handler);\r\n        });\r\n\r\n        return () => {\r\n            if (socket) {\r\n                Object.keys(handlers).forEach(event => {\r\n                    socket.off(event);\r\n                });\r\n                socket.disconnect();\r\n            }\r\n        };\r\n    }, []);\r\n\r\n    const handleCreateRoom = useCallback((settings = {}) => {\r\n        if (!socketRef.current) return;\r\n        \r\n        const roomSettings = {\r\n            maxRounds: settings.maxRounds || 3\r\n        };\r\n\r\n        socketRef.current.emit('createRoom', roomSettings);\r\n    }, []);\r\n\r\n    const handleJoinRoom = (roomId) => {\r\n        if (socketRef.current) {\r\n            socketRef.current.emit('joinRoom', roomId);\r\n            setGameState(prev => ({\r\n                ...prev,\r\n                status: 'room'\r\n            }));\r\n        }\r\n    };\r\n\r\n    const handleSpectateRoom = (roomId) => {\r\n        if (socketRef.current) {\r\n            socketRef.current.emit('spectateRoom', roomId);\r\n            setGameState(prev => ({\r\n                ...prev,\r\n                status: 'spectate'\r\n            }));\r\n        }\r\n    };\r\n\r\n    const handlePlayerReady = () => {\r\n        if (socketRef.current && gameState.roomId) {\r\n            socketRef.current.emit('playerReady', { roomId: gameState.roomId });\r\n            setGameState(prev => ({\r\n                ...prev,\r\n                isReady: true\r\n            }));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"multiplayer-container\">\r\n            {gameState.status === 'lobby' && (\r\n                <GameLobby \r\n                    rooms={rooms}\r\n                    maxRounds={gameState.maxRounds}\r\n                    setMaxRounds={(rounds) => setGameState(prev => ({ ...prev, maxRounds: rounds }))}\r\n                    onCreateRoom={handleCreateRoom}\r\n                    onJoinRoom={handleJoinRoom}\r\n                    onSpectateRoom={handleSpectateRoom}\r\n                />\r\n            )}\r\n            \r\n            {gameState.status === 'room' && (\r\n                <GameRoom \r\n                    socket={socketRef.current}\r\n                    roomId={gameState.roomId}\r\n                    currentRound={gameState.currentRound}\r\n                    maxRounds={gameState.maxRounds}\r\n                    scores={gameState.scores}\r\n                    isReady={gameState.isReady}\r\n                    onReady={handlePlayerReady}\r\n                />\r\n            )}\r\n\r\n            {gameState.status === 'spectate' && (\r\n                <SpectatorView \r\n                    roomId={gameState.roomId}\r\n                    socket={socketRef.current}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\n// 防抖函数\r\nfunction debounce(fn, delay) {\r\n    let timer = null;\r\n    return function(...args) {\r\n        if (timer) clearTimeout(timer);\r\n        timer = setTimeout(() => fn(...args), delay);\r\n    };\r\n}\r\n\r\nexport default MultiPlayer;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,EAAEC,MAAM,QAAQ,OAAO;AACvE,SAASC,EAAE,QAAQ,kBAAkB;AACrC,SAASC,YAAY,QAAQ,WAAW;AACxC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAMC,SAAS,GAAGT,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACxC,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC;IACvCiB,MAAM,EAAE,IAAI;IACZC,YAAY,EAAE,CAAC;IACfC,SAAS,EAAE,CAAC;IACZC,MAAM,EAAE,OAAO;IACfC,OAAO,EAAE;EACb,CAAC,CAAC;EAEFpB,SAAS,CAAC,MAAM;IACZ;IACA,MAAMqB,MAAM,GAAGlB,EAAE,CAACC,YAAY,EAAE;MAC5BkB,UAAU,EAAE,CAAC,WAAW,EAAE,SAAS,CAAC;MACpCC,oBAAoB,EAAE,CAAC;MACvBC,iBAAiB,EAAE,IAAI;MACvBC,WAAW,EAAE,IAAI;MACjBC,OAAO,EAAE;IACb,CAAC,CAAC;IAEFf,SAAS,CAACgB,OAAO,GAAGN,MAAM;IAE1B,MAAMO,QAAQ,GAAG;MACbC,OAAO,EAAEA,CAAA,KAAM;QACXC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;QAClCV,MAAM,CAACW,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;MAC7B,CAAC;MACDC,UAAU,EAAGC,MAAM,IAAK;QACpBJ,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEG,MAAM,CAAC;MACxC,CAAC;MACDC,aAAa,EAAGC,KAAK,IAAK;QACtBN,OAAO,CAACM,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;MAC7C,CAAC;MACDC,SAAS,EAAGA,SAAS,IAAK;QACtBP,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEM,SAAS,CAAC;QAC9CxB,QAAQ,CAACwB,SAAS,CAAC,CAAC,CAAC;MACzB,CAAC;MACDC,WAAW,EAAGC,IAAI,IAAK;QACnBxB,YAAY,CAACyB,IAAI,KAAK;UAClB,GAAGA,IAAI;UACPxB,MAAM,EAAEuB,IAAI,CAACE,QAAQ;UACrBtB,MAAM,EAAE;QACZ,CAAC,CAAC,CAAC;MACP,CAAC;MACDiB,KAAK,EAAEN,OAAO,CAACM;IACnB,CAAC;IAEDM,MAAM,CAACC,OAAO,CAACf,QAAQ,CAAC,CAACgB,OAAO,CAAC,CAAC,CAACC,KAAK,EAAEC,OAAO,CAAC,KAAK;MACnDzB,MAAM,CAAC0B,EAAE,CAACF,KAAK,EAAEC,OAAO,CAAC;IAC7B,CAAC,CAAC;IAEF,OAAO,MAAM;MACT,IAAIzB,MAAM,EAAE;QACRqB,MAAM,CAACM,IAAI,CAACpB,QAAQ,CAAC,CAACgB,OAAO,CAACC,KAAK,IAAI;UACnCxB,MAAM,CAAC4B,GAAG,CAACJ,KAAK,CAAC;QACrB,CAAC,CAAC;QACFxB,MAAM,CAACY,UAAU,CAAC,CAAC;MACvB;IACJ,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMiB,gBAAgB,GAAGjD,WAAW,CAAC,CAACkD,QAAQ,GAAG,CAAC,CAAC,KAAK;IACpD,IAAI,CAACxC,SAAS,CAACgB,OAAO,EAAE;IAExB,MAAMyB,YAAY,GAAG;MACjBlC,SAAS,EAAEiC,QAAQ,CAACjC,SAAS,IAAI;IACrC,CAAC;IAEDP,SAAS,CAACgB,OAAO,CAACK,IAAI,CAAC,YAAY,EAAEoB,YAAY,CAAC;EACtD,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,cAAc,GAAIrC,MAAM,IAAK;IAC/B,IAAIL,SAAS,CAACgB,OAAO,EAAE;MACnBhB,SAAS,CAACgB,OAAO,CAACK,IAAI,CAAC,UAAU,EAAEhB,MAAM,CAAC;MAC1CD,YAAY,CAACyB,IAAI,KAAK;QAClB,GAAGA,IAAI;QACPrB,MAAM,EAAE;MACZ,CAAC,CAAC,CAAC;IACP;EACJ,CAAC;EAED,MAAMmC,kBAAkB,GAAItC,MAAM,IAAK;IACnC,IAAIL,SAAS,CAACgB,OAAO,EAAE;MACnBhB,SAAS,CAACgB,OAAO,CAACK,IAAI,CAAC,cAAc,EAAEhB,MAAM,CAAC;MAC9CD,YAAY,CAACyB,IAAI,KAAK;QAClB,GAAGA,IAAI;QACPrB,MAAM,EAAE;MACZ,CAAC,CAAC,CAAC;IACP;EACJ,CAAC;EAED,MAAMoC,iBAAiB,GAAGA,CAAA,KAAM;IAC5B,IAAI5C,SAAS,CAACgB,OAAO,IAAIb,SAAS,CAACE,MAAM,EAAE;MACvCL,SAAS,CAACgB,OAAO,CAACK,IAAI,CAAC,aAAa,EAAE;QAAEhB,MAAM,EAAEF,SAAS,CAACE;MAAO,CAAC,CAAC;MACnED,YAAY,CAACyB,IAAI,KAAK;QAClB,GAAGA,IAAI;QACPpB,OAAO,EAAE;MACb,CAAC,CAAC,CAAC;IACP;EACJ,CAAC;EAED,oBACIZ,OAAA;IAAKgD,SAAS,EAAC,uBAAuB;IAAAC,QAAA,GACjC3C,SAAS,CAACK,MAAM,KAAK,OAAO,iBACzBX,OAAA,CAACF,SAAS;MACNM,KAAK,EAAEA,KAAM;MACbM,SAAS,EAAEJ,SAAS,CAACI,SAAU;MAC/BwC,YAAY,EAAGC,MAAM,IAAK5C,YAAY,CAACyB,IAAI,KAAK;QAAE,GAAGA,IAAI;QAAEtB,SAAS,EAAEyC;MAAO,CAAC,CAAC,CAAE;MACjFC,YAAY,EAAEV,gBAAiB;MAC/BW,UAAU,EAAER,cAAe;MAC3BS,cAAc,EAAER;IAAmB;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CACJ,EAEApD,SAAS,CAACK,MAAM,KAAK,MAAM,iBACxBX,OAAA,CAACH,QAAQ;MACLgB,MAAM,EAAEV,SAAS,CAACgB,OAAQ;MAC1BX,MAAM,EAAEF,SAAS,CAACE,MAAO;MACzBC,YAAY,EAAEH,SAAS,CAACG,YAAa;MACrCC,SAAS,EAAEJ,SAAS,CAACI,SAAU;MAC/BiD,MAAM,EAAErD,SAAS,CAACqD,MAAO;MACzB/C,OAAO,EAAEN,SAAS,CAACM,OAAQ;MAC3BgD,OAAO,EAAEb;IAAkB;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CACJ,EAEApD,SAAS,CAACK,MAAM,KAAK,UAAU,iBAC5BX,OAAA,CAAC6D,aAAa;MACVrD,MAAM,EAAEF,SAAS,CAACE,MAAO;MACzBK,MAAM,EAAEV,SAAS,CAACgB;IAAQ;MAAAoC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CACJ;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;;AAEA;AAAAxD,EAAA,CAzISD,WAAW;AAAA6D,EAAA,GAAX7D,WAAW;AA0IpB,SAAS8D,QAAQA,CAACC,EAAE,EAAEC,KAAK,EAAE;EACzB,IAAIC,KAAK,GAAG,IAAI;EAChB,OAAO,UAAS,GAAGC,IAAI,EAAE;IACrB,IAAID,KAAK,EAAEE,YAAY,CAACF,KAAK,CAAC;IAC9BA,KAAK,GAAGG,UAAU,CAAC,MAAML,EAAE,CAAC,GAAGG,IAAI,CAAC,EAAEF,KAAK,CAAC;EAChD,CAAC;AACL;AAEA,eAAehE,WAAW;AAAC,IAAA6D,EAAA;AAAAQ,YAAA,CAAAR,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}